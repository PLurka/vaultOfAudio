{
  "openapi": "3.0.3",
  "info": {
    "title": "Localsearch Places (LOS-PLACES)",
    "description": "The Localsearch Places API (LOS-PLACES) offers its clients a unified access point for all premium and online searches.\n\nFollowing compatibility rules for minor changes shall by supported by the clients and backend and don't lead to any errors:\n* Addition of new optional request headers\n* Addition of new response headers\n* Addition of new optional query parameters\n* Addition of new optional properties in request objects\n* Addition of new properties in response objects\n* Addition of new enumeration values\n\nAll other changes after launch are considered as incompatible and would require an increase of the major version.\n",
    "version": "5.9.7",
    "contact": {
      "name": "Localsearch Team",
      "url": "https://atc.bmwgroup.net/confluence/pages/viewpage.action?pageId=1249244454",
      "email": "LOS_Team_Internal@list.bmw.com"
    },
    "x-bmw-msId": "LOS-PLACES",
    "x-bmw-apiId": "bmw-all-los-places",
    "x-bmw-audience": "company-internal",
    "x-bmw-2ndLevelSupportGroup": "los-devops:global:2nd",
    "x-bmw-3rLevelSupportGroup": "los-devops:global:2nd"
  },
  "servers": [
    {
      "url": "/localsearch-service/v5"
    }
  ],
  "paths": {
    "/suggestions": {
      "get": {
        "tags": [
          "Autosuggestion"
        ],
        "summary": "Search API for POIs and Address locations specialized to partial input.",
        "description": "This API performs a query-string driven search that is specialized to partial input queries and can return POIs, addresses, suggested search terms, suggested categories. It should be used and is optimized for auto-completion usecase.",
        "operationId": "autoSuggestion",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderAuthorization"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderSearchSessionId"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleBrand"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveTrain"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleTypeKey"
          },
          {
            "$ref": "#/components/parameters/HeaderClientBaseHost"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search query for retrieving auto-complete suggestions. A query is valid if: String matches '^$|^[\\P{So}\\s\\〒\\°\\®\\©\\҂\\№\\™\\|]+$' and '^$|^(?!(&|:)*$).+$' and String does not match '\\{.*?\\}'.\n",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "(^$|^(?!(&|:)$).+$)"
            }
          },
          {
            "name": "searchLocation",
            "in": "query",
            "description": "Search location provided as latitude, longitude in WGS-84 format, e.g., \"48.1448353,11.5580067\". This API supports point-centric search only.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^([+-])?\\d{1,2}.?\\d*,([+-])?\\d{1,3}.?\\d*$",
              "example": "48.1448353,11.5580067"
            }
          },
          {
            "$ref": "#/components/parameters/QParamCountryFilter"
          },
          {
            "$ref": "#/components/parameters/QParamMaxSearchDistance"
          },
          {
            "$ref": "#/components/parameters/QParamMaxResults"
          },
          {
            "name": "maxHistoryResults",
            "in": "query",
            "description": "Maximum number of search history results.\nThe result set is guaranteed to have fewer or the same number of search history entries as specified with this parameter mixed into the response.\nmaxHistoryResults can not be greater than maxResults.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3,
              "minimum": 0,
              "maximum": 100
            }
          },
          {
            "$ref": "#/components/parameters/QParamOrigin"
          },
          {
            "$ref": "#/components/parameters/QParamFuelTypeFamily"
          },
          {
            "$ref": "#/components/parameters/QParamExcludeSources"
          },
          {
            "$ref": "#/components/parameters/QParamIncludeSources"
          },
          {
            "$ref": "#/components/parameters/QParamChargingCapabilities"
          },
          {
            "name": "ignoreNaviPublish",
            "in": "query",
            "description": "If enabled, the result will contain also Dealers, that are not flagged as naviPublish.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "searchPurpose",
            "description": "This parameter indicates the searchPurpose of the search, this can change the the available POIs to be only drivable ones and also make the suggestions more drive-centric.\n\nE.g. this means with `NAVIGATION` in the US you can no longer search for the \"BMW World\" in Munich, because you cannot really drive there. \nAs well we are more likely to show for the query \"park\" a suggestions for car parks instead of park and gardens.\n\n  * `NAVIGATION` - This will provide more driving relevant results \n  * `GLOBAL_INFORMATION` - This will enable a search around the globe\n",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAVIGATION",
              "enum": [
                "NAVIGATION",
                "GLOBAL_INFORMATION"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful search containing more than zero results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoSuggestionResponse"
                }
              }
            },
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "204": {
            "description": "Successful search but no results were found given the search input.",
            "content": {},
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "400": {
            "description": "The incoming request did not pass input validation.The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/places": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search API for POIs and Address locations.",
        "description": "This API performs a query-string driven search and can return POIs and addresses. It should be used for usecases where the query is given and auto-completion is not supported, e.g. Speech.\n\nIt provides base place attributes (see autosuggestion) and additional POI and speech data suited for list display, e.g. businessHours, reviewSummary.\n\nAdditionally it supports POI search for given categories and allow filtering on category and attribute level.",
        "operationId": "searchExtended",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderAuthorization"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderSearchSessionId"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleBrand"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveTrain"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleTypeKey"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveId"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleModel"
          },
          {
            "$ref": "#/components/parameters/HeaderClientBaseHost"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search containing more than zero results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            },
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              },
              "BMW-Deprecated-Filter": {
                "$ref": "#/components/headers/HeaderDeprecatedFilter"
              }
            }
          },
          "204": {
            "description": "Successful search but no result was found given the search input.",
            "content": {},
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              },
              "BMW-Deprecated-Filter": {
                "$ref": "#/components/headers/HeaderDeprecatedFilter"
              }
            }
          },
          "400": {
            "description": "The incoming request did not pass input validation.The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/places/details": {
      "post": {
        "tags": [
          "Lookup"
        ],
        "summary": "Get details for a list of places.",
        "description": "Returns details for a list of place IDs.\n",
        "operationId": "getDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderAuthorization"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderSearchSessionId"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleBrand"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveTrain"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleTypeKey"
          },
          {
            "$ref": "#/components/parameters/HeaderClientBaseHost"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "includeSources": {
                    "description": "This parameter is used to add some services that are not enabled by default,  e.g. Affiliate-Marketing and therefore can not be enabled/disabled with the excludeSources.\n\nThe possible values for this are hub specific and can be configured, therefore they are not documented here.\n\nIf there are conflicts between includeSources and excludeSources, includeSources takes priority.\n",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "excludeSources": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RequestExcludeSources"
                    }
                  },
                  "includeProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RequestIncludeProperties"
                    }
                  },
                  "origin": {
                    "type": "string",
                    "pattern": "^([+-])?\\d{1,2}.?\\d*,([+-])?\\d{1,3}.?\\d*$",
                    "description": "The origin location which is used for calculating the distance.\nOften this is the position this request is done from. It shall be provided as latitude, longitude in WGS-84 format.\n\nOrigin is required for charging time and cost estimation. If charging parameters are provided, then origin must be provided too.\nIf charging parameter is set and origin not, then an HTTP error 400 will be returned.\n",
                    "example": "48.1448353,11.5580067"
                  },
                  "preferredFuelTypeFamily": {
                    "$ref": "#/components/schemas/FuelTypeFamily"
                  },
                  "chargingCapabilities": {
                    "$ref": "#/components/schemas/ChargingCapabilities"
                  },
                  "charging": {
                    "$ref": "#/components/schemas/ChargingRequestParameters"
                  },
                  "places": {
                    "type": "array",
                    "maxItems": 100,
                    "description": "Place IDs or EVSE-IDs with additional information.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "travelDistance": {
                          "description": "Travel distance in [m] between origin location and place.\n\nThis parameter is used to improve charging time and charging cost estimation.\nIf not set, distance will be calculated based on the origin location.\n",
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0
                        },
                        "arrivalTime": {
                          "description": "Arrival time at that place.\n\nDatatype: UTC Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n\nThis parameter is used to improve charging time and charging cost estimation.\nIf not set, travel time will be estimated based on the origin location.\n",
                          "type": "string",
                          "pattern": "^\\d{8}T\\d{6}Z$",
                          "example": "20071203T111530Z"
                        }
                      },
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/LookupProviderPlaceId"
                        },
                        {
                          "$ref": "#/components/schemas/LookupEvseId"
                        },
                        {
                          "$ref": "#/components/schemas/LookupDpNumber"
                        }
                      ]
                    }
                  },
                  "startDateTime": {
                    "$ref": "#/components/schemas/StartDateTime"
                  },
                  "endDateTime": {
                    "$ref": "#/components/schemas/EndDateTime"
                  }
                },
                "required": [
                  "places"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search containing more than zero results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceDetailsResponse"
                }
              }
            },
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "204": {
            "description": "The requested resource has not been found.",
            "content": {},
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "400": {
            "description": "The incoming request did not pass input validation.The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Returns available brands.",
        "description": "This endpoints delivers the brands available for the respective categories. Please note that this endpoint can only deliver the brands available in LOS-internal search function for premium POIs. Brand information for POIs from general purpose search can currently not be supported.\n",
        "operationId": "getBrands",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "name": "categoryFilter",
            "in": "query",
            "description": "Filter for the categories. The values are given as a comma separated string",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "example": "charging_stations,petrol_stations",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "countryFilter",
            "in": "query",
            "description": "A list of Alpha-2 ISO country codes (ISO 3166-1) to limit the search to.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "example": "DE,GB",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful search brands with more than zero results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "losCategory": {
                        "type": "string",
                        "description": "The LOS category that theses brands belong to.",
                        "example": "charging_stations"
                      },
                      "brands": {
                        "type": "array",
                        "description": "The list of brands for this category.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The technical id of the brand category. It is used to search or filter for brands in LOS APIs.",
                              "example": "CHA:IONITY"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The localized display ready name of the brand. It needs to be extracted from the normal /configuration/translations endpoint, because it has dynamic values.",
                              "example": "IONITY"
                            },
                            "preferred": {
                              "type": "boolean",
                              "description": "Indication whether this brand is a BMW preferred brand. Can be used in the client to sort the list."
                            },
                            "markets": {
                              "type": "array",
                              "description": "The list of the markets where this brand is supported.",
                              "items": {
                                "$ref": "#/components/schemas/CountryCodes"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "204": {
            "description": "The requested resource has not been found.",
            "content": {},
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              },
              "BMW-PartialSuccess-MissingSources": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingSources"
              },
              "BMW-PartialSuccess-MissingData": {
                "$ref": "#/components/headers/HeaderPartialSuccessMissingData"
              }
            }
          },
          "400": {
            "description": "The incoming request did not pass input validation.The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, API-Key is not enabled for this.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/translations": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Retrieve available translations for attribute names and enum values.",
        "description": "This API returns translations for attributes from response model in dotted notation. \nAttributes are written in camel case notation, whereas enums are written in uppercase notation. Array hierarchies are ignored  in the dotted notation.\nFilters are modeled the same ways as ENUMs, using the filter name as attribute name and filter values as ENUM values.",
        "operationId": "getTranslations",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The client provides the ETag version string of the locally cached resource in this request. Using that the server will reply conditionally with either the new data (if available) or with HTTP 304 in case of the provided ETag version is still the most recent one.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returning available translations.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "The server is indicating the version of the returned translations using the value provided in this header.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationResponse"
                }
              }
            }
          },
          "204": {
            "description": "No translations configured on this instance.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {}
          },
          "304": {
            "description": "The provided ETag version via If-None-Match header still is the most recent status, therefore no payload provided.",
            "content": {}
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/poiFilters": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Retrieve all available POI filters including their category assignment and available values.",
        "description": "This API returns all POI filters that are available for use.\nA POI filter may be assigned to a category, or may apply cross-category.\nThe valid values are also returned in this endpoint.\nThe POI Filters have a market specific functionally defined sort order. The order is adhered to  by the array order of the response of this endpoint.",
        "operationId": "getFilters",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveTrain"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The client provides the ETag version string of the locally cached resource in this request. Using that the server will reply conditionally with either the new data (if available) or with HTTP 304 in case of the provided ETag version is still the most recent one.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returning available POI Filters.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "The server is indicating the version of the returned poifilters using the value provided in this header.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllFiltersResponse"
                }
              }
            }
          },
          "204": {
            "description": "No poifilters configured on this instance.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {}
          },
          "304": {
            "description": "The provided ETag version via If-None-Match header still is the most recent status, therefore no payload provided.",
            "content": {}
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/categoryHierarchies": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Retrieve available categories for each market.",
        "description": "This API returns category information and the hierarchy among categories that are enabled in a certain market.",
        "operationId": "getRequestCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "name": "onlyMainCategories",
            "in": "query",
            "description": "With this parameter set to true, only main categories will be returned. Main categories are guaranteed to work worldwide in all HUBs and Markets of location services.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returning available categories.",
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Category"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "subCategories": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/Category"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "subCategories": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/Category"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "204": {
            "description": "No categories configured on this instance.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {}
          },
          "400": {
            "description": "The incoming request did not pass input validation. The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/responseCategories": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Retrieve all available categories in the response.",
        "description": "This API returns category information for the requested market.",
        "operationId": "getResponseCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Returning available categories sorted by losCategory.",
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No categories configured on this instance.",
            "headers": {
              "Cache-Control": {
                "description": "Server responding with this header to indicate for a client if and how long the information can be cached. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for more information.",
                "schema": {
                  "type": "string"
                }
              },
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {}
          },
          "400": {
            "description": "The incoming request did not pass input validation. The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/historyEntries": {
      "post": {
        "tags": [
          "Search history"
        ],
        "summary": "Search History Integrated Retrieval and Bulk Update Endpoint",
        "description": "This API returns entries that are stored in the users search history. The entries could be POIs, addresses, categories and searchTerms. The POIs will be enhanced with formattedAddresses and category information.\nThis API can also be used to add and remove multiple entries from the search history.",
        "operationId": "getSearchHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/HeaderUserAgent"
          },
          {
            "$ref": "#/components/parameters/HeaderAcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/HeaderAuthorizationRequired"
          },
          {
            "$ref": "#/components/parameters/HeaderClientAPIKey"
          },
          {
            "$ref": "#/components/parameters/HeaderTransactionIdInput"
          },
          {
            "$ref": "#/components/parameters/HeaderFeatureToggle"
          },
          {
            "$ref": "#/components/parameters/HeaderTestingRequest"
          },
          {
            "$ref": "#/components/parameters/HeaderHomeMarket"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleBrand"
          },
          {
            "$ref": "#/components/parameters/HeaderDriveTrain"
          },
          {
            "$ref": "#/components/parameters/HeaderVehicleTypeKey"
          },
          {
            "$ref": "#/components/parameters/HeaderClientBaseHost"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxResults": {
                    "description": "Maximum number of results. The result set is guaranteed to contain less or equal locations than specified with this parameter.",
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "default": 20
                  },
                  "operations": {
                    "description": "List of operations that should be performed.",
                    "type": "array",
                    "maxItems": 100,
                    "items": {
                      "$ref": "#/components/schemas/Operation"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchHistoryResponse"
                }
              }
            },
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            }
          },
          "204": {
            "description": "No searchHistory content.",
            "headers": {
              "BMW-CV-Transaction-ID": {
                "$ref": "#/components/headers/HeaderTransactionIdOutput"
              }
            },
            "content": {}
          },
          "400": {
            "description": "The incoming request did not pass input validation.The response will explain more details on the root cause of the error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiClientErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiAuthorizationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "HeaderClientAPIKey": {
        "name": "x-api-key",
        "in": "header",
        "description": "The API Key uniquely identifying the calling client. To be used for all technical integrations.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "HeaderAuthorization": {
        "name": "Authorization",
        "in": "header",
        "description": "The access token supplied as a Bearer header that authenticates the calling customer. Authentication is optional and is used to include personalized data as search content. The authorizing party is determined by the used API Key.",
        "schema": {
          "type": "string"
        }
      },
      "HeaderAuthorizationRequired": {
        "name": "Authorization",
        "in": "header",
        "description": "The access token supplied as a Bearer header that authenticates the calling customer. Authentication is optional and is used to include personalized data as search content. The authorizing party is determined by the used API Key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "HeaderTransactionIdInput": {
        "name": "BMW-CV-Transaction-ID",
        "in": "header",
        "description": "An optional value that is given by the client in form of a client-generated transaction id that identifies the transaction of the call to this microservice.\n\nThe header is intended for operations & issue tracing purposes and helps identifying the tracing and logging information that are generated during processing of this request.\nIt shall be logged with all log statements that are issued when processing this request. The header will also be forwarded to subsequent transitive microservices as far as they support it.\n\nThis header can be set optionally by the client, if the header is not provided a random transaction id will be created on its own at the point of receiving the request. When using this header the client must ensure that it is not containing any personal data and is made up by a fully randomized and anonymized id.\n",
        "schema": {
          "type": "string",
          "example": "a365a023-3563-4c22-8f95-1140cf51e4cb"
        }
      },
      "HeaderFeatureToggle": {
        "name": "BMW-Feature-Toggle",
        "in": "header",
        "description": "An optional value that is given by the client to describe what experimental features should be enabled.\n\nThe header is intended for specific clients to test new features. The possible values are not documented here, since they can change rapidly, but can be found on [the LOS confluence](https://atc.bmwgroup.net/confluence/display/CDLOS/Feature+Toggles).\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "HeaderSearchSessionId": {
        "name": "BMW-Search-Session-ID",
        "in": "header",
        "description": "An optional value that is given by the client in form of a client-generated session id that identifies which calls are done in context of the same search session.\n\nThis header is intended for user analytics and debugging.\nWhen using this header the client must ensure that it is not containing any personal data and is made up by a fully randomized and anonymized id.\n",
        "schema": {
          "type": "string",
          "example": "a365a023-3563-4c22-8f95-1140cf51e4cb"
        }
      },
      "HeaderHomeMarket": {
        "name": "BMW-Home-Market",
        "in": "header",
        "description": "The Connected Drive home market of the requesting customer. This is used to determine the providers to be used for search. If a client cannot provide home market, use the home market can be omitted, this might prevent usage of some provider contracts.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CountryCodes"
        }
      },
      "HeaderAcceptLanguage": {
        "name": "Accept-Language",
        "in": "header",
        "description": "Language for search response provided in standard format for Accept-Language header, see RFC7231.",
        "schema": {
          "type": "string",
          "default": "en-GB"
        }
      },
      "HeaderUserAgent": {
        "name": "User-Agent",
        "in": "header",
        "description": "Client information with detailed software version.",
        "schema": {
          "type": "string"
        }
      },
      "HeaderTestingRequest": {
        "name": "BMW-Testing-Request",
        "in": "header",
        "description": "Indicates whether the request is executed for testing purposes (e.g. performance tests).\nIn this case the request will not be counted for payment.\n",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "HeaderVehicleBrand": {
        "name": "BMW-Vehicle-Brand",
        "in": "header",
        "description": "The vehicle brand of client invoking this service. This is required to find the right BMW dealers.\n",
        "schema": {
          "$ref": "#/components/schemas/VehicleBrand"
        }
      },
      "HeaderDriveTrain": {
        "name": "BMW-Drive-Train",
        "in": "header",
        "description": "The vehicle drive train of the client invoking this service. This parameter is optional for future use.\n",
        "schema": {
          "$ref": "#/components/schemas/DriveTrain"
        }
      },
      "HeaderVehicleTypeKey": {
        "name": "BMW-Vehicle-Type-Key",
        "in": "header",
        "description": "Vehicle type key derived from the VIN.\nCharacters 4-7 from the long VIN (17 characters), e.g. WBA7X21060H016609 -> 7X21.\n\nThis header is required for charging cost and time estimation in order to find the charging curve for the vehicle.\nIf available, this header should be always set for analytics purposes.\n",
        "schema": {
          "type": "string",
          "example": "7X21"
        }
      },
      "HeaderDriveId": {
        "name": "BMW-Drive-ID",
        "in": "header",
        "description": "Drive-Id is an unique ID which is valid for one lifecycle of the car. It is generated in the backend by a service called Drive-Manager.\n",
        "schema": {
          "type": "string",
          "example": "B9DR0FGXWXQEL7AS8"
        }
      },
      "HeaderVehicleModel": {
        "name": "BMW-Vehicle-Model",
        "in": "header",
        "description": "Internal model code of the vehicle.",
        "example": "G05",
        "schema": {
          "type": "string"
        }
      },
      "HeaderClientBaseHost": {
        "name": "BMW-Client-Base-Host",
        "in": "header",
        "description": "The base path of the client request, which is used to provide callable URLs back. This is an optional comfort feature, if not provided all callback URLs will be assuming you call LOS-PLC using public API GW via Internet.",
        "example": "https://prod.emea.los.bmwhub.cloud",
        "schema": {
          "type": "string"
        }
      },
      "QParamMaxSearchDistance": {
        "name": "maxSearchDistance",
        "in": "query",
        "description": "Search results can be restricted based on the distance from the search location. The max distance is in [m].\n\nIf not set, no distance restriction will be applied.\nIf search location type is MBR, distance shall not be provided.\n",
        "schema": {
          "type": "number",
          "format": "double",
          "example": 200000,
          "minimum": 0,
          "exclusiveMinimum": true,
          "maximum": 10000000
        }
      },
      "QParamMaxResults": {
        "name": "maxResults",
        "in": "query",
        "description": "Maximum number of results. The result set is guaranteed to contain less or equal locations than specified with this parameter.",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 20,
          "minimum": 1,
          "maximum": 100
        }
      },
      "QParamOrigin": {
        "name": "origin",
        "in": "query",
        "description": "The origin location which is used for calculating the distance to the places in the result.\nOften this is the position this request is done from. It shall be provided as latitude, longitude in WGS-84 format.\n\nIf not set, the distance will be calculated to the search location.\n",
        "schema": {
          "type": "string",
          "pattern": "^([+-])?\\d{1,2}.?\\d*,([+-])?\\d{1,3}.?\\d*$",
          "example": "48.1448353,11.5580067"
        }
      },
      "QParamFuelTypeFamily": {
        "name": "preferredFuelTypeFamily",
        "in": "query",
        "description": "This optional parameter is used with the BMW-Home-Market to decide what announcement to show and influences the sorting of the fuel prices and nozzles.\nFor more information please check the [confluence page for the preferredFuelTypeFamily](https://atc.bmwgroup.net/confluence/pages/viewpage.action?pageId=1982786434).\n",
        "schema": {
          "$ref": "#/components/schemas/FuelTypeFamily"
        }
      },
      "QParamExcludeSources": {
        "name": "excludeSources",
        "in": "query",
        "style": "form",
        "explode": false,
        "description": "Indicates which sources should be excluded from the request. If not set, all sources are enabled.\nThis could be necessary if some content was not purchased by the customer or for performance optimizations.\n\nSources are considered on a system (micro service) level and have always priority over included properties.\nSources are modelled for direct and transitive dependencies.\n\nFollowing sources are available which can be disabled:\n  * `parking` - Parking premium content. If disabled parking POIs from online provider will be returned.\n  * `parking.availability` - Availability data for parking. If disabled, all availability fields (availability status, free parking lots,...) will not be available and data will not be loaded for announcements.\n  * `parking.price` - Parking prices. If disabled, all parking price related fields will not be available and data will not be loaded for announcements.\n  * `parking.price.live` - Live-computed prices for parking. If disabled, cached or estimated prices will be used. Live computed prices will significantly slow down the response time.\n  * `fuel` - Fuel premium content. If disabled fuel POIs from online provider will be returned.\n  * `fuel.price` - Cached fuel prices. If disabled, all fuel price related fields will not be available and data will not be loaded for announcements.\n  * `charging` - Charging premium content. If disabled charging POIs from online provider will be returned.\n  * `charging.availability` - Availability data for charging. If disabled, all availability fields (availability status, free charging plugs,...) will not be available and data will not be loaded for announcements.\n  * `charging.time` - If disabled, all charging time related fields will not be available and data will not be loaded for announcements.\n  * `charging.quality` - If disabled, all charging quality related fields will not be available and data will not be loaded for ratings.\n  * `charging.price` - Charging prices. If disabled, all charging price related fields will not be available and data will not be loaded for announcements.\n  * `charging.price.live` - Live-computed prices for charging. If disabled, cached or estimated prices will be used. Live computed prices will significantly slow down the response time.\n  * `dealers` - Dealer premium content.\n  * `dealers.pma` - Only valid for US market. Not applicable for /places/details calls. Marks a dealer POI as preferred market area.\n  * `online` - Mixed online search source content.\n  * `ratings` - Ratings source content (e.g. yelp, tripadvisor). If disabled all rating relevant fields (e.g. reviewSummary) will not be available and data will not be loaded for announcements.\n  * `reviews` - Review source content (e.g. plugshare). If disabled all review relevant fields will not be available.\n  * `history` - Personal search history.\n  * `deviateTime` - Deviate time. If disabled the deviate time and distance will not be added to the search along the route searches.\n\nEnumeration contains all possible values for all requests. Not all values are applicable for all requests and will be ignored if not needed.\n\nIf parameter is not set all sources will be included.\n\n!Caution!: Live prices will significantly slow down the performance and shall not be used for requests with many possible place results, e.g. search.\n",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/RequestExcludeSources"
          }
        }
      },
      "QParamIncludeSources": {
        "name": "includeSources",
        "in": "query",
        "description": "This parameter is used to add some services that are not enabled by default,  e.g. Affiliate-Marketing and therefore can not be enabled/disabled with the excludeSources.\n\nThe possible values for this are hub specific and can be configured, therefore they are not documented here.\n\nIf there are conflicts between includeSources and excludeSources, includeSources takes priority.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "QParamChargingCapabilities": {
        "name": "chargingCapabilities",
        "in": "query",
        "description": "Additional charging capabilities supported by the vehicle.\n\n* `DC` - If this value is set in super-categories and query searches also charging stations classified as DC or unclassified charging stations will be returned. To enable CCE/CTE charging capabilities `DC` must be provided.\n* `AC` - If this value is set in super-categories and query searches also charging stations classified as AC or unclassified charging stations will be returned\n* `PNC` - If this value is set plug and charge based filters are enabled\n* `NONE` - If this value is set to NONE in super-categories and query searches no charging stations will be returned\n* `EMPTY` - If this value is empty or not present in the super-categories and queries, all charging stations are returned\n\nFor more info see also [CDLOS / Charging Capabilities](https://atc.bmwgroup.net/confluence/display/CDLOS/Charging+capabilities).\n\nNote: For MGU vehicles, all charging capabilities shall be taken from the provisioning (section: ev_settings -> charging_capabilities).\n",
        "schema": {
          "$ref": "#/components/schemas/ChargingCapabilities"
        }
      },
      "QParamCountryFilter": {
        "name": "countryFilter",
        "in": "query",
        "description": "A list of Alpha-2 ISO country codes (ISO 3166-1) to limit the search to.\nThis will not override the search location.\n\n* `AF` - Shortcut for Africa\n* `NM` - Shortcut for North America\n* `OC` - Shortcut for Oceania\n* `AS` - Shortcut for Asia (with out China, Hong Kong, Macao and Korea)\n* `EU` - Shortcut for Europe\n* `SA` - Shortcut for South America\n* `AUTOMATIC_NDS_COVERAGE` - A predefined countryFilter based on the BMW-Home-Market header\n",
        "schema": {
          "$ref": "#/components/schemas/CountryFilter"
        }
      }
    },
    "headers": {
      "HeaderTransactionIdOutput": {
        "description": "The transactionId that can be used to find log and tracing information for the processing of this request.\n",
        "schema": {
          "type": "string",
          "example": "a365a023-3563-4c22-8f95-1140cf51e4cb"
        }
      },
      "HeaderPartialSuccessMissingSources": {
        "description": "The presence of this header indicates that the result set might be reduced due to temporary transitive failure of a system\nthat was requested to process this request. The value of this header indicates which system(s) have failed in contributing\nto the response of this request. The allowed values matches with those of excludedSources parameter. The values are given as a comma separated string.\n",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/RequestExcludeSources"
          },
          "example": "parking.price.live,charging"
        }
      },
      "HeaderPartialSuccessMissingData": {
        "description": "The presence of this header indicates that the result set was reduced for resilience purposes. The content of this header indicates more information of what part of the content in the result has been dropped.\n",
        "schema": {
          "example": "75|here:pds:place:2768lxx5-0c7a74f478830b21a4a2ebce5cd4e2c8|items.place.businessHours;items.place.commercial,25|385494|items.place.parking",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "HeaderDeprecatedFilter": {
        "description": "The presence of this header indicates that the query contains one or more deprecated/invalid filters.\nThe value of this header indicates which filters are deprecated/invalid and should not be used anymore.\nThe allowed values match the filters name.value. The values are specified as a comma-separated string.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "open_now,services.wifi"
        }
      }
    },
    "schemas": {
      "PlacesRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "pattern": "(^$|^(?!(&|:)$).+$)",
            "description": "Search query for retrieving places. This parameter must be set for free text search and is optional for category search. If both parameters categories and query are set, free text search will be performed only for specified POI categories. A query is valid if: String matches '^$|^[\\P{So}\\s\\〒\\°\\®\\©\\҂\\№\\™\\|]+$' and '^$|^(?!(&|:)*$).+$' and String does not match '\\{.*?\\}'.\"\n"
          },
          "categories": {
            "type": "array",
            "description": "Array of POI categories. The values are numeric for MGU vehicle categories or textual for BMW categories and brands which are mapped to categories of different online providers. If a category matches to a BMW premium category, then Premium POI LOS search and content provider search will be triggered. This parameter must be set for pre-defined POI category search and is optional for free text search.",
            "items": {
              "type": "string"
            }
          },
          "categoryType": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "searchLocationType": {
            "$ref": "#/components/schemas/SearchLocationType"
          },
          "searchLocation": {
            "type": "string",
            "description": "Search location describing the area of search.\nValue format of the parameter can be 1-n length list of pairs of latitude, longitude in WGS-84 format for geometric locations.\nEach pair is separated by \"|\", e.g. \"48.1448353,11.5580067|49.1448353,12.5580067\".\n\nThe allowed number of pairs:\n  * POINT(n=1)\n  * MBR(n=2)\n  * ROUTE(n>1)\n\nIf search location type is ADDRESS, text format will be expected.\nIf search location type is ROUTE_POLYLINE, a Base64 encoded (see https://datatracker.ietf.org/doc/html/rfc4648#section-4) string of a route in the Google Polyline format is expected. (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm)\n",
            "example": "48.1448353,11.5580067|49.1448353,12.5580067"
          },
          "countryFilter": {
            "$ref": "#/components/schemas/CountryFilter"
          },
          "maxSearchDistance": {
            "type": "number",
            "format": "double",
            "example": 200000,
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 10000000,
            "description": "Search results can be restricted based on the distance from the search location. The max distance is in [m].\nIf not set, no distance restriction will be applied.\nIf search location type is MBR, distance shall not be provided.\n"
          },
          "maxResults": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results. The result set is guaranteed to contain less or equal locations than specified with this parameter.",
            "default": 20,
            "minimum": 1,
            "maximum": 100
          },
          "origin": {
            "type": "string",
            "pattern": "^([+-])?\\d{1,2}.?\\d*,([+-])?\\d{1,3}.?\\d*$",
            "description": "The origin location which is used for calculating the distance to the places in the result.\nOften this is the position this request is done from. It shall be provided as latitude, longitude in WGS-84 format.\nIf not set, the distance will be calculated to the search location.\nAdditionally, origin is required for charging time and cost estimation. If charging parameters are provided, then origin must be provided too.\nIf charging parameter is set and origin not, then an HTTP error 400 will be returned.\n",
            "example": "48.1448353,11.5580067"
          },
          "preferredFuelTypeFamily": {
            "$ref": "#/components/schemas/FuelTypeFamily"
          },
          "poiFilters": {
            "type": "array",
            "description": "The filters that shall be applied during search.\n\nFilter application rules are as follows:\n* If the filter does not apply to a certain result category of a potential result instance the result instance is included in the answer.\n* Filters are a mandatory requirement to fulfill on all result candidates of the category the filter applies for, if they cannot be fulfilled the search result will be empty.\n\nFilter precedence rules are as follows:\n* All filters will be treated as AND conjunction. E.g.: SIMPLE_FILTER_1 AND SIMPLE_FILTER_2 AND SIMPLE_FILTER_N\n* Multiple values of a MULTI_SELECT filter can be seen as OR. E.g.: (MULTI_FILTER_1_VALUE_A OR MULTI_FILTER_1_VALUE_B) AND SIMPLE_FILTER_1\n\nSee also POIFilterType object description for more information.\n",
            "items": {
              "$ref": "#/components/schemas/POIFilterRequestValue"
            }
          },
          "startDateTime": {
            "$ref": "#/components/schemas/StartDateTime"
          },
          "endDateTime": {
            "$ref": "#/components/schemas/EndDateTime"
          },
          "ignoreNaviPublish": {
            "description": "If enabled, the result will contain also Dealers, that are not flagged as naviPublish.",
            "type": "boolean",
            "default": false
          },
          "searchPurpose": {
            "description": "This parameter indicates the searchPurpose of the search, this can change the the available POIs to be only drivable ones and also make the suggestions more drive-centric.\n\nE.g. this means with `NAVIGATION` in the US you can no longer search for the \"BMW World\" in Munich, because you cannot really drive there. \nAs well we are more likely to show for the query \"park\" a suggestions for car parks instead of park and gardens.\n\n  * `NAVIGATION` - This will provide more driving relevant results \n  * `GLOBAL_INFORMATION` - This will enable a search around the globe\n",
            "type": "string",
            "default": "NAVIGATION",
            "enum": [
              "NAVIGATION",
              "GLOBAL_INFORMATION"
            ]
          },
          "searchRequestEnhancementLevel": {
            "description": "If set and the response does not contain satisfying results, LOS will automatically enhance the search request.\n\nExact rules and more information are available on [this confluence page](https://atc.bmwgroup.net/confluence/pages/viewpage.action?pageId=2709920178).\n",
            "type": "integer",
            "enum": [
              1
            ]
          },
          "sortingOptions": {
            "$ref": "#/components/schemas/SortingOption"
          },
          "includeSources": {
            "description": "This parameter is used to add some services that are not enabled by default,  e.g. Affiliate-Marketing and therefore can not be enabled/disabled with the excludeSources.\n\nThe possible values for this are hub specific and can be configured, therefore they are not documented here.\n\nIf there are conflicts between includeSources and excludeSources, includeSources takes priority.\n",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludeSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestExcludeSources"
            }
          },
          "includeProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestIncludeProperties"
            }
          },
          "chargingCapabilities": {
            "$ref": "#/components/schemas/ChargingCapabilities"
          },
          "charging": {
            "$ref": "#/components/schemas/ChargingRequestParameters"
          },
          "sensorContext": {
            "$ref": "#/components/schemas/SensorContext"
          },
          "guidanceContext": {
            "$ref": "#/components/schemas/GuidanceContext"
          },
          "rangeContext": {
            "$ref": "#/components/schemas/RangeContext"
          }
        },
        "required": [
          "searchLocation"
        ]
      },
      "StartDateTime": {
        "type": "string",
        "pattern": "^\\d{8}T\\d{6}Z$",
        "example": "20071203T101530Z",
        "description": "The start date and time of intended stay at the search result. Field is used in conjunction with filters and price computation.\n\nDatatype: UTC Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n"
      },
      "EndDateTime": {
        "type": "string",
        "pattern": "^\\d{8}T\\d{6}Z$",
        "example": "20071203T111530Z",
        "description": "The end date and time of intended stay at the search result. Field is used in conjunction with filters and price computation.\n\nDatatype: UTC Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n"
      },
      "VehicleBrand": {
        "type": "string",
        "default": "BMW",
        "enum": [
          "BMW",
          "BMW_I",
          "BMW_M",
          "BMW_MOTORRAD",
          "MINI",
          "RR"
        ]
      },
      "DriveTrain": {
        "type": "string",
        "enum": [
          "ICE_GASOLINE",
          "ICE_DIESEL",
          "BEV",
          "PHEV"
        ]
      },
      "SearchLocationType": {
        "type": "string",
        "description": "Type of the location provided in the searchLocation parameter.",
        "default": "POINT",
        "enum": [
          "POINT",
          "MBR",
          "ROUTE",
          "ROUTE_POLYLINE",
          "ADDRESS"
        ]
      },
      "CategoryType": {
        "type": "string",
        "description": "Category type used for search request. The parameter will be only evaluated if categories parameter is set.\n* `LOS` - Category name (text) defined in LOS (e.g. restaurants)\n* `MGU` - Category ID (integer) used in MGU.\n* `PROVIDER_ONTOLOGY` - Dynamic ontology id coming from provider.\n* `BRAND` - Brand ID (text) that is in the response or comes from the /brands endpoint.\nAdditionally, query parameter shall be provided to enable search in premium content. Therefore, title of the category suggestion shall be used.\n",
        "default": "LOS",
        "enum": [
          "LOS",
          "MGU",
          "PROVIDER_ONTOLOGY",
          "BRAND"
        ]
      },
      "RequestExcludeSources": {
        "type": "string",
        "enum": [
          "parking",
          "parking.availability",
          "parking.price",
          "parking.price.live",
          "fuel",
          "fuel.price",
          "charging",
          "charging.availability",
          "charging.time",
          "charging.quality",
          "charging.price",
          "charging.price.live",
          "dealers",
          "dealers.pma",
          "online",
          "ratings",
          "reviews",
          "history",
          "deviateTime"
        ]
      },
      "RequestIncludeProperties": {
        "type": "string",
        "enum": [
          "NONE",
          "ALL",
          "PLACE_BASE",
          "sortingOptions",
          "poiFilters",
          "items.place.businessHours",
          "items.place.timeZone",
          "items.place.reviewSummary",
          "items.place.boundingBox",
          "items.place.phonemes",
          "items.place.announcements",
          "items.place.commercial",
          "items.place.commercial.priceSummary",
          "items.place.commercial.priceStructured",
          "items.place.foodTypes",
          "items.place.foreignIds",
          "items.place.refueling",
          "items.place.parking",
          "items.place.charging",
          "items.place.dealer",
          "items.place.availability",
          "items.place.imageUrls",
          "items.place.contact",
          "items.place.additions",
          "items.place.childrenPois",
          "items.place.appReferences",
          "items.place.nearbyPois",
          "items.place.reviews"
        ],
        "default": "ALL"
      },
      "ChargingRequestParameters": {
        "type": "object",
        "description": "Parameter for charging usecases, e.g. charging time and charging cost estimation.\nIf not set, charging time, charging prices and all dependent fields will not be available.\n\nIf set, additionally origin parameter and BMW-Vehicle-Type-Key header must be provided. Otherwise, HTTP error 400 will be returned.\n",
        "properties": {
          "batteryTemperature": {
            "type": "integer",
            "minimum": -50,
            "maximum": 204,
            "description": "The mean temperature of the high voltage battery.\nThe parameter is required, as the temperature affects the charging power.\nValue Range: [-50...204°C]\n"
          },
          "nominalBatteryCapacity": {
            "type": "number",
            "format": "double",
            "minimum": -50,
            "maximum": 600,
            "description": "The nominal capacity of the high voltage battery. The value is required to determine how much energy can be charged.\nUnit: [kWh]\nValue Range: [-50...600 kWh]\n"
          },
          "averageElectricConsumption": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "maximum": 400,
            "description": "The average electric consumption. This value is needed to assess the arrival SOC at the charge point.\nUnit: kWh/100km\nValue Range: [0...400 kWh/100km]\n"
          },
          "acChargingLimit": {
            "type": "integer",
            "minimum": 0,
            "maximum": 250,
            "description": "Set charging AC charging limit.\nValue Range: [0...250A]\n"
          },
          "soc": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "maximum": 100,
            "description": "Current SOC of the high voltage battery. Sent in BEVs and PHEVs.\nValue Range: [0...100%]\n"
          },
          "targetSoc": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "maximum": 100,
            "description": "Target SOC of the high voltage battery when charging the vehicle.\nValue Range: [0...100%]\n"
          },
          "evcoid": {
            "type": "string",
            "description": "The EVCO ID of the customer. Based on the contract data charging cost estimation values are calculated.\n"
          },
          "nominalMaxDcChargingPower": {
            "type": "integer",
            "minimum": 0,
            "description": "Max. DC charging power in [kW]\n",
            "default": 150
          },
          "nominalMaxAcChargingPower": {
            "type": "integer",
            "minimum": 0,
            "description": "Max. AC charging power in [kW]\n",
            "default": 11
          },
          "electricRemainingRange": {
            "type": "number",
            "format": "double",
            "minimum": 0,
            "description": "The remaining driving range in [m]\n"
          }
        },
        "required": [
          "batteryTemperature",
          "nominalBatteryCapacity",
          "averageElectricConsumption",
          "soc",
          "targetSoc"
        ]
      },
      "ResponseAdvertisementProperties": {
        "description": "Contains all relevant advertisement information for affiliate marketing",
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "string",
            "description": "This id identifies an advertiser and is POI specific. It is used for monetization."
          },
          "label": {
            "description": "Indicates how the client should label an advertised item. This could be market specific.",
            "type": "string",
            "enum": [
              "NONE",
              "TEXT",
              "ICON"
            ],
            "default": "TEXT"
          }
        }
      },
      "SensorContext": {
        "type": "object",
        "properties": {
          "seatsOccupied": {
            "description": "The current number of occupied seats in the vehicle",
            "type": "number",
            "example": 4
          },
          "outdoorTemperature": {
            "description": "The currently measured outdoor temperature in degree celsius",
            "type": "number",
            "example": 21.5
          }
        },
        "additionalProperties": true
      },
      "GuidanceContext": {
        "type": "object",
        "properties": {
          "activeGuidance": {
            "description": "Flag to indicate an active route guidance is set in navigation software. Default is false.",
            "type": "boolean",
            "default": false
          },
          "tripTime": {
            "type": "object",
            "description": "Contains time information of the current trip. Only available if activeGuidance is true.",
            "properties": {
              "remaining": {
                "type": "number",
                "description": "Remaining trip time in seconds",
                "example": 3544
              },
              "elapsed": {
                "type": "number",
                "description": "Elapsed trip time in seconds",
                "example": 235
              }
            }
          }
        },
        "additionalProperties": true
      },
      "RangeContext": {
        "type": "object",
        "properties": {
          "combinedRemainingRange": {
            "type": "number",
            "format": "float",
            "description": "Combined remaining range in meters",
            "example": 3620.7
          },
          "electricRemainingRange": {
            "type": "number",
            "description": "Electric remaining range in meters. Only available for BEV and PHEV vehicles.",
            "format": "float",
            "example": 352.04
          },
          "combustionRemainingRange": {
            "type": "number",
            "format": "float",
            "description": "Remaining range in meters. Only available for NOT BEV vehicle.",
            "example": 8065.3
          }
        },
        "additionalProperties": true
      },
      "WgsPosition": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude (e.g. 48.134055676 (using WGS-84 standard)).",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "description": "Longitude (e.g. 11.573808342 (using WGS-84 standard)).",
            "format": "double"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "NamedPosition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name (e.g. \"Entrance South-East\")."
          },
          "position": {
            "$ref": "#/components/schemas/WgsPosition"
          }
        },
        "required": [
          "position"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Alpha-2 ISO country code (ISO 3166-1)",
            "example": "DE"
          },
          "country": {
            "type": "string",
            "description": "The localized country name."
          },
          "regionCode": {
            "type": "string",
            "description": "Region code. Region is administrative level below country and above city.\n"
          },
          "region": {
            "type": "string",
            "description": "Localized region name. Region is administrative level below country and above city.\n\n* US: State\n* China/Korea: Province\n* JP: Prefecture\n"
          },
          "city": {
            "type": "string",
            "description": "Localized city name.\n\n* JP: Municipal and Ward/Ku address parts formatted as '{Municipal}{KU}' for JP locale and '{Municipal} {KU}' for all other locales.\n"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code."
          },
          "district": {
            "type": "string",
            "description": "District. Administrative level below city.\n\n* JP: Area/Ohaza (subdistrict in HERE data) address part.\n"
          },
          "street": {
            "type": "string",
            "description": "Street name. If address type is intersection it will contain the main street of the intersection. (CAUTION!) some content providers merge the house number in here."
          },
          "block": {
            "type": "string",
            "description": "Currently JP only attribute: Chome address part."
          },
          "subblock": {
            "type": "string",
            "description": "Currently JP only attribute: Banchi address part."
          },
          "houseNumber": {
            "type": "string",
            "description": "House number. (CAUTION!) only provided in case provided by our content providers.\n\n* JP: Go and Sub address parts formatted as '{GO}-{SUB}'.\n"
          },
          "intersection": {
            "type": "object",
            "properties": {
              "streets": {
                "type": "array",
                "description": "Additional streets of an intersection. Main street is in the street field and is not contained in this field.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "countryCode",
          "country"
        ]
      },
      "PoiCategory": {
        "type": "object",
        "properties": {
          "losCategory": {
            "type": "string",
            "description": "LOS category used for requests."
          },
          "mguVehicleCategoryId": {
            "type": "integer",
            "description": "5-digit category id used within MGU vehicles (fixed mapping table).",
            "format": "int32",
            "example": 13000
          },
          "name": {
            "type": "string",
            "description": "The displayable name for the category represented in this object.",
            "example": "Parking Garage",
            "required": [
              "id",
              "displayName"
            ]
          },
          "searchedCategory": {
            "type": "boolean",
            "description": "This is an indication of whether this category is the category being searched for.\n\nA use case would be that the query was for restaurants and the result is a hotel and a restaurant.\nAssuming that the hotel is the primary category, this specification would be set to true for the secondary category of restaurants.\n"
          }
        }
      },
      "StructuredTimeDescription": {
        "type": "object",
        "description": "A structured object describing a timeframe (e.g. used for applicable times of opening hours or prices.)",
        "properties": {
          "start": {
            "type": "string",
            "description": "see: RFC 5545: http://tools.ietf.org/html/rfc5545#section-3.3.51, example: 'T070000'"
          },
          "duration": {
            "type": "string",
            "description": "see: RFC 5545: http://tools.ietf.org/html/rfc5545#section-3.3.6, example: 'PT18H00M'"
          },
          "recurrence": {
            "type": "string",
            "description": "see: RFC 5545: http://tools.ietf.org/html/rfc5545#section-3.3.10, example: 'FREQ:DAILY;BYDAY:MO,TU,WE,TH'"
          }
        },
        "required": [
          "start",
          "duration"
        ]
      },
      "BusinessHours": {
        "type": "object",
        "description": "The business hours for this place.\n\nIf this place has multiple business hours, e.g. the place is a hotel and a restaurant, the business hours are for the primary category.\n",
        "properties": {
          "formattedHours": {
            "type": "array",
            "description": "The POI opening hours, localized and translated. The array items/lines are sorted by the display order.\n",
            "items": {
              "type": "string",
              "description": "One formatted line with opening hours."
            }
          },
          "nextStatusChange": {
            "type": "string",
            "description": "The localized next status change of the POIs opening hours.\n",
            "example": "Closes at 20:00"
          },
          "nextStatusChangeTime": {
            "type": "string",
            "description": "The local time when the opening hours change next.\nSpecified as date-time string in the local timezone of the POI, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n",
            "format": "Date-Time",
            "example": "20180605T141500"
          },
          "closedOnArrival": {
            "type": "boolean",
            "description": "The indication whether a POI is closed on arrival or not.\nFor this field to be filled a route search must be active and deviateTime enabled.\n"
          },
          "status": {
            "type": "string",
            "description": "The POI open status.",
            "enum": [
              "OPEN",
              "CLOSED"
            ]
          },
          "structured": {
            "type": "array",
            "description": "The POI open status in RFC 5545 format.",
            "items": {
              "$ref": "#/components/schemas/StructuredTimeDescription"
            }
          }
        }
      },
      "ReviewSummary": {
        "type": "object",
        "description": "Contains summary of the reviews.\n\nBased on commercial contract, it is required that provider logo and provider icon for the average rating are displayed.\nLogo and icon images are not part of the response and have to be downloaded separately with the following schema:\n\nLogo:\n  {base_url}/{provider}-{ciVersion}-{screenId}.png\n\nRaging Icon:\n  {base_url}/{provider}-{ciVersion}-{ratingIconId}-{screenId}.png\n\nbase_url and screenId are part of the provisioning.\n",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Provider that delivered review information, e.g., Yelp, Tripadvisor, Google, Baidu.\nFor internal charging station rating 'BMW' will be returned.\nIf parameter is not set, icons shall not be requested from the backend.\n"
          },
          "ciVersion": {
            "type": "string",
            "description": "The corporate identity version of this provider, e.g. V1.\nThis information is needed to download the right icon from the backend.\nIf parameter is not set, icons shall not be requested from the backend.\n"
          },
          "averageRating": {
            "type": "number",
            "description": "The average of all ratings as given by the provider.\nValue Range [0.0...5.0]\n",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "description": "The number of total reviews taken into account by the provider.",
            "format": "int32"
          },
          "ratingIconId": {
            "type": "string",
            "description": "The average rating mapped to a scale given by provider expressed as an icon identifier, e.g. 3_5 or 35_5 for 3 or 3.5 our of 5 (say starts).\nThis information is needed to download the right icon from the backend.\nIf parameter is not set, icons shall not be requested from the backend.\n"
          },
          "availableIcons": {
            "type": "array",
            "description": "The available icon information to download and display the rating",
            "items": {
              "$ref": "#/components/schemas/Icon"
            }
          },
          "attributionRequired": {
            "type": "boolean",
            "description": "Indicate whether attribution for the provided image is required. (e.g. true)",
            "default": false
          },
          "availableAttributionIcons": {
            "type": "array",
            "description": "The available attribution icons information to download and display the attribution",
            "items": {
              "$ref": "#/components/schemas/Icon"
            }
          }
        }
      },
      "Icon": {
        "type": "object",
        "properties": {
          "downloadPath": {
            "type": "string",
            "description": "The relative download path for the  icon",
            "example": "provider-ciVersion-ratingIconId-1.png"
          }
        }
      },
      "AddressPhonemes": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Phonetic transcription for the localized country name."
          },
          "region": {
            "type": "string",
            "description": "Phonetic transcription for localized region name."
          },
          "city": {
            "type": "string",
            "description": "Phonetic transcription for localized city name."
          },
          "district": {
            "type": "string",
            "description": "Phonetic transcription for district."
          },
          "street": {
            "type": "string",
            "description": "Phonetic transcription for street name."
          },
          "block": {
            "type": "string",
            "description": "Phonetic transcription for block."
          },
          "subblock": {
            "type": "string",
            "description": "Phonetic transcription for subblock."
          }
        }
      },
      "Phonemes": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The ISO language code in which phonemes are provided, e.g., \"de\", \"es-003\", \"fr-CA\""
          },
          "title": {
            "type": "string",
            "description": "The phoneme for the title of the place."
          },
          "address": {
            "$ref": "#/components/schemas/AddressPhonemes"
          }
        },
        "required": [
          "language"
        ]
      },
      "Availability": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The availability status (aggregated) is possible for parking and charging POIs.",
            "enum": [
              "UNKNOWN",
              "FREE",
              "ALMOST_OCCUPIED",
              "ALL_OCCUPIED",
              "OUT_OF_ORDER"
            ]
          },
          "lastUpdate": {
            "type": "string",
            "description": "The date and UTC time of the last update.\n\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n",
            "example": "20210304T145600Z"
          }
        },
        "required": [
          "status"
        ]
      },
      "FoodType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the food type."
          },
          "name": {
            "type": "string",
            "description": "Name of the food type in the result item language."
          },
          "primary": {
            "type": "boolean",
            "description": "Whether or not it is a primary category. It is false if not present.",
            "default": false
          }
        },
        "required": [
          "name"
        ]
      },
      "PaymentMethod": {
        "type": "string",
        "description": "The method of payment accepted for the primary services at this POI.",
        "enum": [
          "DEBIT",
          "DEBIT-VPAY",
          "DEBIT-MAESTRO",
          "DEBIT-GIROCARD",
          "CASH",
          "EUROCARD",
          "CREDIT_CARD",
          "MOBILE_PHONE",
          "CREDIT_CARD-AMEX",
          "CREDIT_CARD-DINERS_CLUB",
          "CREDIT_CARD-VISA",
          "CREDIT_CARD-BARCLAY",
          "CREDIT_CARD-MASTER",
          "CONTRACT",
          "LOYALTY_CARD",
          "ONLINE",
          "OTHER",
          "SMART_FUELLING"
        ]
      },
      "FuelType": {
        "type": "string",
        "enum": [
          "DIESEL",
          "DIESELFREE",
          "DIESELPLUS",
          "DIESELWINTER",
          "SP92",
          "SP92PLUS",
          "SP95_E10",
          "SP95",
          "SP95PLUS",
          "SP95FREE",
          "SP96",
          "SP98",
          "SP98PLUS",
          "SP99",
          "SP100",
          "REGULAR",
          "MID",
          "PREMIUM"
        ]
      },
      "FuelTypeFamily": {
        "description": "This optional parameter is used with the BMW-Home-Market to decide what announcement to show and influences the sorting of the fuel prices and nozzles.\nFor more information please check the [confluence page for the preferredFuelTypeFamily](https://atc.bmwgroup.net/confluence/pages/viewpage.action?pageId=1982786434).\n",
        "type": "string",
        "enum": [
          "GASOLINE",
          "DIESEL",
          "GASOLINE_PERFORMANCE"
        ]
      },
      "Refueling": {
        "type": "object",
        "properties": {
          "fuelTypes": {
            "type": "array",
            "description": "The list of available fuel types.",
            "items": {
              "$ref": "#/components/schemas/FuelType"
            }
          },
          "brand": {
            "description": "The brand of the petrol station.",
            "type": "string"
          },
          "brandType": {
            "type": "integer",
            "format": "int32"
          },
          "services": {
            "type": "array",
            "description": "The list of available services which are offered, e. g. \"tyre pressure\"",
            "items": {
              "type": "string",
              "enum": [
                "ADBLUE",
                "ATM",
                "CARREPAIR",
                "CARWASH",
                "FOODSHOP",
                "SHOP",
                "WC",
                "TYREAIR",
                "WIFI"
              ]
            }
          },
          "nozzles": {
            "type": "array",
            "description": "Gas station could have several pumps and each pump could have several nozzles.\nSome gas stations have only numbers for pumps and not for each nozzle.\nThe combination of fuel type and number can be used to identify the nozzle uniquely.\n",
            "items": {
              "type": "object",
              "properties": {
                "fuelType": {
                  "$ref": "#/components/schemas/FuelType"
                },
                "number": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of a pump or a nozzle. Use it in combination with fuel type.\n"
                }
              },
              "required": [
                "number"
              ]
            }
          }
        },
        "required": [
          "fuelTypes"
        ]
      },
      "Commercial": {
        "type": "object",
        "properties": {
          "preferredPartners": {
            "type": "array",
            "description": "The list of the POI preferred partners. In case of preferred partner POI, there could be an additional indication in the list (e.g. different icon).",
            "items": {
              "type": "string"
            }
          },
          "paymentMethods": {
            "type": "array",
            "description": "The list of available payment methods to pay for the primary services of this POI.",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "onlinePay": {
            "type": "boolean",
            "description": "Indicates whether online payment is possible.",
            "default": false
          },
          "supportInvoice": {
            "type": "boolean",
            "description": "Indicates whether invoices are provided for payments.",
            "default": false
          },
          "onlinePaymentOperators": {
            "type": "array",
            "description": "The list of online operators which can be used for online payment at this POI.",
            "items": {
              "$ref": "#/components/schemas/ForeignOperatorReference"
            }
          },
          "onlineBookingOperators": {
            "type": "array",
            "description": "The list of online operators which offer online booking service for this POI.",
            "items": {
              "$ref": "#/components/schemas/ForeignOperatorReference"
            }
          },
          "priceSummary": {
            "type": "object",
            "properties": {
              "priceRangeLevel": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 5,
                "description": "An indicator for the pricing level of this POI compared to other POIs of the same category near this location. 1 indicates cheapest category. 5 the highest category."
              },
              "priceRangeText": {
                "type": "string",
                "description": "The character or sequence of characters to be used to textually describe the priceRangeLevel, e.g. number of dollar signs.",
                "example": "€€€"
              },
              "priceSummaryText": {
                "type": "string",
                "description": "A very short, descriptive one-line string for the prices of the main service at this POI that is ready to show, e.g. \"2€ / 2h\""
              },
              "free": {
                "type": "boolean",
                "description": "Indication of the main service of this POI is offered for free. E.g. if the POI is a charging station, then setting this attribute to true indicates free charging. Similarly if it is a parking poi setting this true indicates free parking.",
                "default": false
              }
            }
          },
          "priceStructured": {
            "type": "object",
            "properties": {
              "listPrices": {
                "type": "array",
                "description": "List of static prices known for this POI. These are usually the list prices for this service at the POI and may not contain every individual situation. They can be used for rendering a price table for the POI.\nTo obtain a more specific and more accurate price for a certain situation refer to liveComputedPrices or precomputedPrices.",
                "items": {
                  "$ref": "#/components/schemas/ListPrice"
                }
              },
              "liveComputedPrices": {
                "type": "array",
                "description": "List of prices that have been computed online and transitively with the response of this search request. This is the most accurate price available, but asking for it will trigger transitive requests.\nRequired input parameters * startDateTime (parking only) * endDateTime (parking only) * charging (charging only)\nAvailable for: parking, charging\nTo obtain a rough price for comparison scenarios better refer to preComputedPrices.",
                "items": {
                  "$ref": "#/components/schemas/UnitPrice"
                }
              },
              "preComputedPrices": {
                "type": "array",
                "description": "List of prices for certain common scenarios of services at this POI that are recomputed regularly and are available from a fast responding cache. Those prices are well suited for comparative display and comparison use-case.\nAvailable for: parking, fuelling\nTo obtain an exact situation specifically live computed price refer to liveComputedPrices.",
                "items": {
                  "$ref": "#/components/schemas/CachedPrice"
                }
              }
            }
          }
        }
      },
      "UnitPrice": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "The service for which this price applies.",
            "enum": [
              "CHARGING",
              "PARKING",
              "REFUELLING",
              "BLOCKING_CHARGING_STATION"
            ]
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price value as a numeric value in the currency given in the currency attribute."
          },
          "currency": {
            "type": "string",
            "description": "The price currency for the price value given in the price attribute."
          },
          "paymentMethodRateRestriction": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "fuellingTariffType": {
            "type": "string",
            "description": "The tariff for this price, used to distinguish different prices for the same service that might have different preconditions\n\nValues * REGULAR -> the normal price applicable to general public\n* PAYMENT_METHOD_SPECIFIC -> price only applies of you pay with payment method specified in paymentMethodRateRestriction\n* OFFICIAL_REGULATED -> price set by authorities, e.g. relevant for fuel price in China.          default: REGULAR",
            "enum": [
              "REGULAR",
              "PAYMENT_METHOD_SPECIFIC",
              "OFFICIAL_REGULATED"
            ]
          },
          "chargingTariffType": {
            "$ref": "#/components/schemas/ChargingTariffType"
          },
          "formattedPriceString": {
            "type": "string",
            "description": "The price value given in attribute price, currency formatted as a one line string according to provided input locale from client."
          },
          "quantity": {
            "type": "number",
            "description": "The quantity multiplier of unit for which this price applies."
          },
          "unit": {
            "type": "string",
            "description": "The unit for the quantity given in price attribute for this price entry. E.g. \"l\", \"kw/h\", \"h\""
          },
          "fuelType": {
            "$ref": "#/components/schemas/FuelType"
          },
          "evseId": {
            "type": "string",
            "description": "(Charging only) The EVSEID for the chargepoint represented by this price point. If not present and the service is of type charging, then charging across all charge points on this POI has the same cost."
          }
        },
        "required": [
          "service",
          "price",
          "currency",
          "formattedPriceString"
        ]
      },
      "CachedPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnitPrice"
          },
          {
            "type": "object",
            "properties": {
              "startTime": {
                "type": "string",
                "format": "Date-Time",
                "description": "The start time that is used as the basis for this precomputed price or when this precomputed price becomes applicable. This might not be available for all cached prices.\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5",
                "example": "20210304T143000Z"
              },
              "endTime": {
                "type": "string",
                "format": "Date-Time",
                "description": "The end time that is used as the basis for this precomputed price or when this precomputed price becomes invalid. This might not be available for all cached prices.\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5",
                "example": "20210304T163000Z"
              },
              "lastUpdate": {
                "type": "string",
                "format": "Date-Time",
                "description": "The time when this precomputed price was updated last.\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5",
                "example": "20210304T143000Z"
              }
            }
          }
        ]
      },
      "ListPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnitPrice"
          },
          {
            "type": "object",
            "properties": {
              "timeframe": {
                "$ref": "#/components/schemas/StructuredTimeDescription"
              }
            }
          }
        ]
      },
      "ForeignOperatorReference": {
        "type": "object",
        "properties": {
          "operatorName": {
            "type": "string",
            "description": "The name used for identification of this operator.",
            "example": "ParkNow"
          },
          "operatorLocationId": {
            "type": "string",
            "description": "The id used to identify this poi at this operator."
          }
        },
        "required": [
          "operatorName"
        ]
      },
      "Parking": {
        "type": "object",
        "properties": {
          "spotsNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The number of parking spots. If not known, this property will not be available."
          },
          "freeSpotsNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The number of free parking spots. If not known, this property will not be available.\nThe last update time for it can be found in items[i].place.availability.lastUpdate property.\n"
          },
          "disabledSpotsNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The number of parking spots for people with disabilities. If not known, this property will not be available.\n"
          },
          "parkingDimensionRestriction": {
            "type": "object",
            "properties": {
              "height": {
                "type": "integer",
                "description": "Height of the entrance to the parking place in [m].",
                "example": 800,
                "format": "int32"
              },
              "width": {
                "type": "integer",
                "description": "Width of the entrance to the parking place in [m].",
                "example": 800,
                "format": "int32"
              }
            },
            "description": "The height and width of a parking place."
          },
          "operator": {
            "type": "string",
            "description": "The operator name for this station."
          },
          "restrictions": {
            "type": "array",
            "description": "The list of restrictions that apply for this parking POI, e.g. only for customers.",
            "items": {
              "$ref": "#/components/schemas/ParkingRestriction"
            }
          },
          "services": {
            "type": "array",
            "description": "The list of value added services which are offered by the parking POI.",
            "items": {
              "$ref": "#/components/schemas/ParkingService"
            }
          },
          "types": {
            "type": "array",
            "description": "The parking types in which the POI can be categorised.",
            "items": {
              "$ref": "#/components/schemas/ParkingTypes"
            }
          }
        }
      },
      "ParkingTypes": {
        "type": "string",
        "enum": [
          "MECHANICAL",
          "PD",
          "UP",
          "PG",
          "MP",
          "PRIV",
          "AUPG",
          "MSTOR",
          "OAP",
          "SPEPG",
          "SPG",
          "ONS",
          "APG",
          "NCOV",
          "GATE",
          "COV",
          "CURB",
          "PCOV",
          "LIT",
          "OFFS"
        ]
      },
      "ParkingService": {
        "type": "string",
        "enum": [
          "CHRGSP",
          "BOOKING",
          "NOCUSTONLY",
          "PERS",
          "DISABLED",
          "SECURE",
          "WOMAN",
          "VP",
          "JUIBAR",
          "LARGE",
          "ROOM",
          "OIL",
          "TOI",
          "ATM",
          "URENT",
          "WAIT",
          "BIKERENT",
          "BOOTSH",
          "BREP",
          "BUGRENT",
          "CRENT",
          "ATTSITE",
          "SUV",
          "FAMILY",
          "BAKERY",
          "ELEV",
          "HANDAC",
          "MRENT",
          "SHOP",
          "WPS",
          "FPS",
          "MPS",
          "CHARGE",
          "MOTOR",
          "PARKMARK",
          "BATCH",
          "PR",
          "ALCO",
          "PC",
          "PF",
          "PK",
          "BISTRO",
          "CCTV",
          "DRIVENOW",
          "CSHARE",
          "CWASH",
          "DEFI",
          "REST"
        ]
      },
      "ParkingRestriction": {
        "type": "string",
        "enum": [
          "EVENT",
          "CUSTOMER",
          "TIMERESTR",
          "VISITOR",
          "COACH",
          "LOADING",
          "TAXI",
          "PERMIT",
          "MAXSTAY",
          "MOTORCYCLE",
          "NOSUV",
          "NONE",
          "NOLPG",
          "NOPARKING",
          "RESIDENT",
          "EMPLOYEE",
          "MONTHLY",
          "OTHER",
          "BIKE",
          "VALET",
          "DISABLED",
          "CLUB",
          "TRUCK"
        ]
      },
      "ChargingTariffType": {
        "type": "string",
        "description": "The type of tariff that applies for charging.",
        "enum": [
          "AC",
          "DC"
        ]
      },
      "Phase": {
        "type": "string",
        "description": "Indicated whether DC or AC is supplied.",
        "enum": [
          "AC",
          "DC"
        ]
      },
      "PlugType": {
        "type": "string",
        "description": "The plug type of this connector, e.g., \"TYP2.\"",
        "enum": [
          "HOUSEHOLD",
          "TYP1",
          "TYP2",
          "TYP3",
          "TYPCN",
          "TYPCNDC",
          "CEE",
          "CHADEMO",
          "COMBOTYP1",
          "COMBOTYP2",
          "NACS",
          "CHAOJI"
        ]
      },
      "PlugFormat": {
        "type": "string",
        "description": "Indicates whether a cable is available for charging. CABLE - cable is attached, the vehicle should have a fitting inlet; SOCKET - cable is not present, the driver should bring a fitting cable.",
        "enum": [
          "CABLE",
          "SOCKET"
        ]
      },
      "ChargingPoint": {
        "type": "object",
        "description": "Listing of all charging points at this POI. At each charging point exactly one customer can charge.",
        "properties": {
          "evseId": {
            "type": "string",
            "description": "An id for the charging point represented by this entry of the charging point array as provided by the charging poi provider."
          },
          "providerChargingPointId": {
            "type": "string",
            "description": "Technical identifier of the charging point, defined by the provider."
          },
          "position": {
            "$ref": "#/components/schemas/WgsPosition"
          },
          "macAddress": {
            "type": "string",
            "description": "The MAC-Address for the charging point represented by this entry of the charging point array."
          },
          "availability": {
            "type": "string",
            "description": "Indication on availability for this singular charge point. The availability can be ordinal only (FREE/OCCUPIED/OUT_OF_ORDER) or UNKNOWN.",
            "enum": [
              "UNKNOWN",
              "FREE",
              "OCCUPIED",
              "OUT_OF_ORDER"
            ]
          },
          "lastUpdate": {
            "type": "string",
            "description": "The date and UTC time of the last update.\n\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n",
            "example": "20210304T145600Z"
          },
          "plugs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plug"
            }
          }
        },
        "required": [
          "phase",
          "plugs"
        ]
      },
      "Plug": {
        "type": "object",
        "properties": {
          "plugType": {
            "$ref": "#/components/schemas/PlugType"
          },
          "phase": {
            "$ref": "#/components/schemas/Phase"
          },
          "format": {
            "$ref": "#/components/schemas/PlugFormat"
          },
          "chargingTariffType": {
            "$ref": "#/components/schemas/ChargingTariffType"
          },
          "highPowerCharging": {
            "type": "boolean",
            "description": "Indicates whether high power charging (HPC) is possible.",
            "default": false
          },
          "power": {
            "type": "number",
            "format": "double",
            "description": "Power for charging in unit kW."
          },
          "current": {
            "type": "number",
            "format": "double",
            "description": "Maximum current depending on the charging station's capabilities."
          },
          "voltage": {
            "type": "number",
            "format": "double",
            "description": "Maximum voltage depending on the charging station's capabilities."
          },
          "chargingTime": {
            "type": "integer",
            "format": "int32",
            "description": "The charging time in minutes, e.g. 53."
          },
          "chargingTimeLabel": {
            "type": "string",
            "description": "The charging time as text, e.g. '53 min' or '1,2 h'."
          }
        },
        "required": [
          "plugType"
        ]
      },
      "Charging": {
        "type": "object",
        "properties": {
          "stationOperator": {
            "type": "string",
            "description": "The operator name for this station, e.g., \"Stadtwerke München GmbH\"."
          },
          "stationProvider": {
            "type": "string",
            "description": "The provider name for this station, e.g., \"eclearing\"."
          },
          "typeOfService": {
            "type": "string",
            "description": "The type of the service available at this charging POI towards the customer.",
            "enum": [
              "SELF_SERVICE",
              "VALET",
              "STAFF",
              "UNKNOWN"
            ]
          },
          "access": {
            "type": "string",
            "description": "The access, e. g. \"PUBLIC\".",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ]
          },
          "location": {
            "type": "string",
            "description": "The location, e. g. \"OUTDOOR\". If location is \"ALL\" this means the charging POI has both indoor and outdoor charging facilities.",
            "enum": [
              "INDOOR",
              "OUTDOOR",
              "ALL"
            ]
          },
          "authentications": {
            "type": "array",
            "description": "The authentication mechanism.",
            "items": {
              "type": "string",
              "enum": [
                "APP",
                "CALL",
                "KEY",
                "NFC",
                "PLUGNCH",
                "QRCODE",
                "RFID",
                "SMS",
                "EASYCH",
                "NONE"
              ]
            }
          },
          "parkingSpots": {
            "type": "integer",
            "format": "int32",
            "description": "Number of overall parking places (independent of charging)."
          },
          "usageCount": {
            "type": "integer",
            "description": "The number of usages of the charging station over the past 30 days."
          },
          "usedLast": {
            "type": "string",
            "description": "The date and UTC time of the last charging session at the charging POI as static information (statistics).\n\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n",
            "example": "20210304T145600Z"
          },
          "verificationStatus": {
            "type": "boolean",
            "description": "A value that helps the customer to assess if the charging station is verified (based on last usage, total usages, power…).",
            "default": false
          },
          "chargingTimeSummaryDC": {
            "type": "string",
            "description": "Translated display ready information for the charging time on a DC station.",
            "example": "DC 1:05h→75%"
          },
          "chargingTimeSummaryAC": {
            "type": "string",
            "description": "Translated display ready information for the charging time on a AC station.",
            "example": "AC 1:05h→75%"
          },
          "chargingTimeAndPriceSummary": {
            "type": "string",
            "description": "Display estimated time, amount and currency.",
            "example": "1h 46 min ≈ 50 RMB"
          },
          "chargingPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargingPoint"
            }
          },
          "greenEnergy": {
            "type": "boolean",
            "description": "Flag indicating whether the charging station supports green energy.",
            "example": true
          },
          "carModelsObserved": {
            "type": "array",
            "description": "A list of BMW car models by their publicly communicated naming that have been observed charging at this station. This property is currently available in China only.",
            "items": {
              "type": "string",
              "description": "BMW car model",
              "example": "iX3 M Sport"
            }
          },
          "destinationCharging": {
            "type": "array",
            "description": "The BMW/MINI/RR Destination Charging information, when supported at this POI.",
            "items": {
              "type": "string",
              "enum": [
                "BMW",
                "MINI",
                "RR"
              ]
            }
          }
        }
      },
      "Dealer": {
        "type": "object",
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/VehicleBrand"
          },
          "foreignIds": {
            "type": "object",
            "description": "IDs which are used to identify dealers.",
            "properties": {
              "businessPartnerId": {
                "type": "string",
                "description": "The global unique identifier of the dealer, length: 8-char, consisting of digits only.",
                "example": "00009785"
              },
              "agDealerCode": {
                "type": "string",
                "description": "The company (AG = Aktiengesellschaft) dealer code, unique within a continent, length: 5-char, consisting of digits only.",
                "example": 2119
              },
              "distributionPartnerNumber": {
                "type": "string",
                "description": "The distribution partner number; meaning similar to agDealerCode, but brand-specific (one AG Dealer (agDealerCode)) may consist of several distribution partners),\nunique within a continent, length: 5-char, consisting of digits only.\n",
                "example": 2119
              },
              "outlet": {
                "type": "string",
                "description": "The outlet of a dealer; each dealer may have several physical outlet locations, e. g. '17'"
              }
            }
          },
          "afterSalesServices": {
            "type": "array",
            "description": "Aftersales Services offered by this dealer.\n  * `BA` - Basic (BMWi Service general)\n  * `HV` - High Voltage\n  * `CR` - Carbon Repair\n  * `RB` - Refurbishment\n  * `PHEV`- PHEV (High voltage batteries)\n  * `EB`- Extended Battery\n  * `1` - MINI Service general\n  * `2` - Body & Paint (MINI)\n  * `3` - Care & Cosmetic repairs (MINI)\n  * `4` - HU & AU (MINI)\n  * `5` - PHEV (High voltage batteries)\n",
            "items": {
              "type": "string",
              "enum": [
                "BA",
                "HV",
                "CR",
                "RB",
                "PHEV",
                "EB",
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            }
          },
          "onlineSales": {
            "type": "array",
            "description": "Information about online sales offerings at this dealer e.g. email, phone.",
            "items": {
              "$ref": "#/components/schemas/OnlineSales"
            }
          },
          "requestServices": {
            "type": "array",
            "description": "Request Services offered by this dealer.\n  * `CBS` - Certified Body Shop\n  * `CPS` - Certified Paint Shop\n  * `FON` - Finance Online\n  * `RFA` - Request for Accessory\n  * `RFC` - Request for Contract\n  * `RFD` - Request for Dealer Contact\n  * `RFI` - Request for Information\n  * `RFO` - Request for Offer\n  * `RFP` - Request for Purchase\n  * `RFS` - Request for Service\n  * `RFSF`- Request for Financial Service\n  * `RID` - Request for Information Dealer\n  * `SLG` - Stock Locator GA\n  * `SON` - Online selling\n  * `STL` - Stock Locator\n  * `TDA` - Test Drive Appointment\n  * `WWYM`- We Want Your MINI\n",
            "items": {
              "type": "string",
              "enum": [
                "CBS",
                "CPS",
                "FON",
                "RFA",
                "RFC",
                "RFD",
                "RFI",
                "RFO",
                "RFP",
                "RFS",
                "RFSF",
                "RID",
                "SLG",
                "SON",
                "STL",
                "TDA",
                "WWYM"
              ]
            }
          },
          "distributionCategory": {
            "type": "string",
            "description": "The distribution category of the dealer.\n  * `EH` - Dealer\n  * `NL` - Retail Subsidiary\n  * `IMP` - Importer\n  * `MSF` - Mobile Sales Force\n  * `CIC` - Customer Interaction Center\n  * `INT` - Internet\n",
            "enum": [
              "EH",
              "NL",
              "IMP",
              "MSF",
              "CIC",
              "INT"
            ]
          },
          "distributionTypes": {
            "type": "array",
            "description": "The distribution type of the dealer.\n  * `F` - Vehicles\n  * `T` - Parts and Service\n  * `G` - Used Cars\n  * `CCRC` - Certified collision repair center\n",
            "items": {
              "type": "string",
              "enum": [
                "F",
                "T",
                "G",
                "CCRC"
              ]
            }
          },
          "outletType": {
            "type": "string",
            "description": "The type of the outlet.\n  * `FU` - Fully fledged outlet\n  * `SE` - Service only outlet\n  * `SA` - Sales only outlet\n  * `PO` - Only parts\n  * `UC` - Used car center\n  * `SP` - Service outsourced\n  * `TD` - Test drive center\n  * `FL` - Fast Lane Service\n",
            "enum": [
              "FU",
              "SE",
              "SA",
              "PO",
              "UC",
              "SP",
              "TD",
              "FL"
            ]
          },
          "businessType": {
            "type": "array",
            "description": "The business type.\n  * `NO` - Normal\n  * `EX` - ex-AG Used Car\n  * `MS` - Mobile service\n  * `PR` - Used Car Program\n  * `VG` - NSC Used Car\n  * `WR` - Plant Repair\n  * `MC` - M certified\n  * `AT` - Agent (new for brand BMWi)\n  * `HV` - High Voltage Service format (new for brand BMWi)\n  * `CR` - Carbon Repair Service format (new for brand BMWi)\n  * `RB` - Refurbishment of Used Cars (new for brand BMWi)\n  * `GA` - Wholesale customers\n",
            "items": {
              "type": "string",
              "enum": [
                "NO",
                "EX",
                "MS",
                "PR",
                "VG",
                "WR",
                "MC",
                "AT",
                "HV",
                "CR",
                "RB",
                "GA"
              ]
            }
          },
          "naviPublished": {
            "type": "boolean",
            "description": "Is this Dealer flagged as naviPublish."
          },
          "isPMA": {
            "type": "boolean",
            "description": "preferred market area - Only valid for US market. Not applicable for /places/details calls. Marks a dealer POI as preferred market area. This is a dynamic field that is set based on the searchLocation and indicates that a dealer is the PMA for the area, based on the search request"
          }
        },
        "required": [
          "brand"
        ]
      },
      "OnlineSales": {
        "type": "object",
        "required": [
          "salesType"
        ],
        "description": "Information about online sales offerings at this dealer.",
        "properties": {
          "salesType": {
            "type": "string",
            "description": "The type of products that this online sales info is related to.",
            "enum": [
              "CAR_USED",
              "CAR_NEW"
            ]
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "DetailsImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL where the image can be retrieved (e.g. \"https://media-cdn.tripadvisor.com/media/photo-s/05/3e/c9/9b/cafe-rischart-im-oez.jpg\")"
          },
          "width": {
            "type": "number",
            "description": "Width of the image in pixel (e.g. 800)"
          },
          "height": {
            "type": "number",
            "description": "Height of the image (e.g 200)"
          },
          "attributionRequired": {
            "type": "boolean",
            "description": "Indicate whether attribution for the provided image is required. (e.g. true)",
            "default": false
          },
          "attributionLabel": {
            "type": "string",
            "description": "Attribution label to be used for the image. (e.g. \"(c) 2021 Yelp\" or \"CC-BY-SA 3.0 Some Photographer\")"
          }
        },
        "required": [
          "url"
        ]
      },
      "Contact": {
        "type": "object",
        "description": "The contact information for this place.\n\nIf this place has multiple categories, and contact details are provided for multiple categories, then the contact details provided in LOS API are for the primary category.\n",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Phone number which can be called."
          },
          "website": {
            "type": "string",
            "description": "Website URL."
          },
          "email": {
            "type": "string",
            "description": "E-Mail."
          }
        }
      },
      "SuggestedSearchLocation": {
        "type": "object",
        "description": "This describes the new search location recommended for performing the search of this proposal.\nThe search location is described by a search center, the parsed strings to construct a title for the relationship to the current proposal, and a reference to the location that marks the proposed search center.\n",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude (e.g. 48.134055676 (using WGS-84 standard)). This latitude is the same as in placeReference for compatibility.",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "description": "Longitude (e.g. 11.573808342 (using WGS-84 standard)). This longitude is the same as in placeReference for compatibility.",
            "format": "double"
          },
          "relationship": {
            "type": "string",
            "description": "Localized relation",
            "example": "near"
          },
          "placeReference": {
            "description": "Place reference for the new search location recommended for performing the search of this proposal.\n\nFollowing properties will be guaranteed to be available:\n  * providerId\n  * providerPlaceId\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaceBase"
              },
              {
                "type": "object",
                "required": [
                  "providerId",
                  "providerPlaceId"
                ]
              }
            ]
          }
        },
        "required": [
          "lat",
          "lng",
          "relationship",
          "placeReference"
        ]
      },
      "PlaceBase": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Content Provider.",
            "example": "Here"
          },
          "providerId": {
            "type": "integer",
            "description": "Place provider ID."
          },
          "providerPlaceId": {
            "type": "string",
            "description": "The unique id specified by the content provider. Samples for (parking, e.g., Parkopedia, refueling, e.g. navX, charging, e.g. hubject ) are: 384510, 6591bcd4-75f7-102d-8c52-00304891a58c, DESWME008202"
          },
          "title": {
            "type": "string",
            "description": "Localized title for the place, this will be guaranteed to be available for both addresses and POIs.\n"
          },
          "position": {
            "$ref": "#/components/schemas/WgsPosition"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "formattedAddress": {
            "type": "string",
            "description": "A one line formatted address version for the place. The formatting rules are dependent on the physical location of the place and the client-provided Accept-Language header value."
          },
          "entrances": {
            "type": "array",
            "description": "List of access points used for navigation.",
            "items": {
              "$ref": "#/components/schemas/NamedPosition"
            }
          },
          "placeType": {
            "type": "string",
            "description": "Place type.",
            "enum": [
              "ADDRESS",
              "POI"
            ]
          },
          "addressType": {
            "type": "string",
            "description": "\"Type of an address representing the highest granularity of the address. For instance, a houseNumber-type result will always contain a houseNumber field in the address response element. Additional elements are street, city and country fields. A street-type result itself won't have a houseNumber field in the address response element. This field is mandatory for address place type.\nFollowing address hierarchies are supported:\n* JP: country->region->city->postalCode->district->block->subblock->housenumber\n* REST: country->region->city->postalCode->district->street->(housenumber OR intersection)",
            "enum": [
              "COUNTRY",
              "REGION",
              "CITY",
              "POSTAL_CODE",
              "DISTRICT",
              "STREET",
              "BLOCK",
              "SUBBLOCK",
              "HOUSE_NUMBER",
              "INTERSECTION"
            ]
          },
          "category": {
            "description": "The primary category for this POI.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PoiCategory"
              },
              {
                "type": "object",
                "required": [
                  "losCategory",
                  "mguVehicleCategoryId"
                ]
              }
            ]
          },
          "secondaryCategories": {
            "description": "A list of secondary categories for this POIs. This list excludes the primary category (the 'category' field).",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PoiCategory"
                },
                {
                  "type": "object",
                  "required": [
                    "losCategory",
                    "mguVehicleCategoryId"
                  ]
                }
              ]
            }
          },
          "brand": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique id of the brand in an ID system understood by LOS that is partially made up by internal IDs or by IDs provided by the providers. It can be used to filter by this brand (future planned feature).",
                "example": "HERE:265"
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the brand.",
                "example": "BMW"
              }
            }
          },
          "staticIconDiscriminator": {
            "$ref": "#/components/schemas/StaticIconDiscriminator"
          },
          "hasChildrenPois": {
            "type": "string",
            "description": "The indication whether a Place has childrenPois, this value is independent of the includeProperties. Possible values are:\n\n* `YES` - The POI has childrenPois.\n* `MAYBE` - The POI might have childrenPois but this can only be determined at runtime when you make a request to /places/details.\n* `NO` - The POI does not have childrenPois.\n",
            "default": "MAYBE",
            "enum": [
              "YES",
              "MAYBE",
              "NO"
            ]
          }
        }
      },
      "PlaceBaseSearchHistoryUpload": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Content Provider.",
            "example": "Here"
          },
          "providerId": {
            "type": "integer",
            "description": "Place provider ID."
          },
          "providerPlaceId": {
            "type": "string",
            "description": "The unique id specified by the content provider. Samples for (parking, e.g., Parkopedia, refueling, e.g. navX, charging, e.g. hubject ) are: 384510, 6591bcd4-75f7-102d-8c52-00304891a58c, DESWME008202"
          },
          "title": {
            "type": "string",
            "description": "Localized title for the place, this will be guaranteed to be available for both addresses and POIs.\n"
          },
          "position": {
            "$ref": "#/components/schemas/WgsPosition"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "formattedAddress": {
            "type": "string",
            "description": "A one line formatted address version for the place. The formatting rules are dependent on the physical location of the place and the client-provided Accept-Language header value."
          },
          "entrances": {
            "type": "array",
            "description": "List of access points used for navigation.",
            "items": {
              "$ref": "#/components/schemas/NamedPosition"
            }
          },
          "placeType": {
            "type": "string",
            "description": "Place type.",
            "enum": [
              "ADDRESS",
              "POI"
            ]
          },
          "addressType": {
            "type": "string",
            "description": "\"Type of an address representing the highest granularity of the address. For instance, a houseNumber-type result will always contain a houseNumber field in the address response element. Additional elements are street, city and country fields. A street-type result itself won't have a houseNumber field in the address response element. This field is mandatory for address place type.\nFollowing address hierarchies are supported:\n* JP: country->region->city->postalCode->district->block->subblock->housenumber\n* REST: country->region->city->postalCode->district->street->(housenumber OR intersection)",
            "enum": [
              "COUNTRY",
              "REGION",
              "CITY",
              "POSTAL_CODE",
              "DISTRICT",
              "STREET",
              "BLOCK",
              "SUBBLOCK",
              "HOUSE_NUMBER",
              "INTERSECTION"
            ]
          },
          "category": {
            "description": "The primary category for this POI.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PoiCategory"
              },
              {
                "type": "object",
                "required": [
                  "mguVehicleCategoryId"
                ]
              }
            ]
          },
          "secondaryCategories": {
            "description": "A list of secondary categories for this POIs. This list excludes the primary category (the 'category' field).",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PoiCategory"
                },
                {
                  "type": "object",
                  "required": [
                    "losCategory",
                    "mguVehicleCategoryId"
                  ]
                }
              ]
            }
          },
          "brand": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique id of the brand in an ID system understood by LOS that is partially made up by internal IDs or by IDs provided by the providers. It can be used to filter by this brand (future planned feature).",
                "example": "HERE:265"
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the brand.",
                "example": "BMW"
              }
            }
          },
          "staticIconDiscriminator": {
            "$ref": "#/components/schemas/StaticIconDiscriminator"
          },
          "hasChildrenPois": {
            "type": "string",
            "description": "The indication whether a Place has childrenPois, this value is independent of the includeProperties. Possible values are:\n\n* `YES` - The POI has childrenPois.\n* `MAYBE` - The POI might have childrenPois but this can only be determined at runtime when you make a request to /places/details.\n* `NO` - The POI does not have childrenPois.\n",
            "default": "MAYBE",
            "enum": [
              "YES",
              "MAYBE",
              "NO"
            ]
          }
        }
      },
      "Place": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PlaceBase"
          },
          {
            "type": "object",
            "required": [
              "providerId",
              "providerPlaceId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "businessHours": {
                "$ref": "#/components/schemas/BusinessHours"
              },
              "timeZone": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Europe/Berlin"
                  },
                  "utcOffset": {
                    "type": "string",
                    "pattern": "[-+±]?\\d\\d:\\d\\d",
                    "description": "The UTC offset following ISO-8601",
                    "example": "+02:00"
                  }
                },
                "required": [
                  "utcOffset"
                ]
              },
              "reviewSummary": {
                "$ref": "#/components/schemas/ReviewSummary"
              },
              "reviews": {
                "$ref": "#/components/schemas/Reviews"
              },
              "boundingBox": {
                "type": "object",
                "description": "Bounding box for preview map.",
                "properties": {
                  "westSouth": {
                    "$ref": "#/components/schemas/WgsPosition"
                  },
                  "eastNorth": {
                    "$ref": "#/components/schemas/WgsPosition"
                  }
                }
              },
              "phonemes": {
                "$ref": "#/components/schemas/Phonemes"
              },
              "announcements": {
                "type": "array",
                "maxItems": 2,
                "description": "2-line announcement about the POI, displayed in the search result list as 2nd and 3rd line.\nEach array element is one line.\n",
                "items": {
                  "type": "string"
                }
              },
              "commercial": {
                "$ref": "#/components/schemas/Commercial"
              },
              "foodTypes": {
                "type": "array",
                "description": "Food types available for categories where you can eat and drink (e.g. italian).",
                "items": {
                  "$ref": "#/components/schemas/FoodType"
                }
              },
              "foreignIds": {
                "type": "array",
                "description": "A list containing the IDs of foreign content provider, like HERE, NavX, Tripadvisor, YELP or RYD",
                "items": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "description": "Foreign content Provider.",
                      "example": "Ryd"
                    },
                    "providerId": {
                      "type": "integer",
                      "description": "Foreign place provider ID."
                    },
                    "providerPlaceId": {
                      "type": "string",
                      "description": "The unique id specified by the foreign content provider."
                    }
                  },
                  "required": [
                    "provider",
                    "providerId",
                    "providerPlaceId"
                  ]
                }
              },
              "refueling": {
                "$ref": "#/components/schemas/Refueling"
              },
              "parking": {
                "$ref": "#/components/schemas/Parking"
              },
              "charging": {
                "$ref": "#/components/schemas/Charging"
              },
              "dealer": {
                "$ref": "#/components/schemas/Dealer"
              },
              "availability": {
                "$ref": "#/components/schemas/Availability"
              },
              "images": {
                "type": "array",
                "description": "Images for this POI.",
                "items": {
                  "$ref": "#/components/schemas/DetailsImage"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/Contact"
              },
              "additions": {
                "type": "array",
                "description": "Additional text information.",
                "items": {
                  "type": "string"
                }
              },
              "childrenPois": {
                "type": "array",
                "description": "A list of full child POIs",
                "items": {
                  "$ref": "#/components/schemas/Place"
                }
              },
              "appReferences": {
                "type": "object",
                "description": "Reference data used when this POI is interacting with custom apps.",
                "properties": {
                  "tencentMpp": {
                    "$ref": "#/components/schemas/TencentMppAppReference"
                  }
                }
              },
              "nearbyPois": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NearbyPOI"
                }
              },
              "poiTags": {
                "type": "array",
                "description": "POI tags will show displayable tags that are associated with this POI. Currently only used for Charging and only existent for data provided by CIS.\nThe default behaviour of LOS V5 API to return data based on the incoming Accept-Language header, or if not available for the requested language, fallback to en-GB.\nThe following example is the array of provider names.\n",
                "items": {
                  "type": "string"
                },
                "example": [
                  "星星充电",
                  "大真科技",
                  "深圳通途",
                  "森通智达"
                ]
              },
              "advertisement": {
                "$ref": "#/components/schemas/ResponseAdvertisementProperties"
              }
            }
          }
        ]
      },
      "SearchResultItem": {
        "type": "object",
        "properties": {
          "place": {
            "$ref": "#/components/schemas/Place"
          },
          "distance": {
            "type": "number",
            "description": "Distance between origin position and the place in [m].",
            "format": "double"
          },
          "deviateTime": {
            "type": "number",
            "format": "integer",
            "description": "Deviation time for search along the route requests. Calculation requires additional processing time which can be disabled with exclude properties.\nThe deviation time is given in seconds.\n"
          },
          "deviateDistance": {
            "type": "number",
            "format": "integer",
            "description": "Deviation distance for search along the route requests. Calculation requires additional processing time which can be disabled with exclude properties.\nThe deviation distance is given in meters.\n"
          }
        },
        "required": [
          "place",
          "distance"
        ]
      },
      "AutoSuggestionResultItem": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "string",
            "description": "Result item type.\n  * `PLACE` - Suggestion for a place. It contains place and distance property.\n  * `SEARCH_TERM` - Suggestion for a search text, which will execute free text search query. It contains searchTermSuggestion property.\n  * `SEARCH_HISTORY_PLACE` - Suggestion for a place from the search history. It contains place and distance property.\n  * `SEARCH_HISTORY_SEARCH_TERM` - Suggestion for a search text from the search history, which will execute a free text search query. It contains searchTermSuggestion property.\n  * `SEARCH_HISTORY_CATEGORY` - Suggestion for a category from the search history, which will execute a category search. It contains categorySuggestion property.\n  * `CATEGORY` - Suggestion for a category, which will execute category search. It contains categorySuggestion property.\n",
            "enum": [
              "PLACE",
              "SEARCH_TERM",
              "SEARCH_HISTORY_PLACE",
              "SEARCH_HISTORY_SEARCH_TERM",
              "SEARCH_HISTORY_CATEGORY",
              "CATEGORY"
            ]
          },
          "categorySuggestion": {
            "$ref": "#/components/schemas/CategorySuggestion"
          },
          "searchTermSuggestion": {
            "$ref": "#/components/schemas/SearchTermSuggestion"
          },
          "place": {
            "description": "Place data.\n\nFollowing properties will be guaranteed to be available and if PLACE_BASE is included in the includeProperties request parameter:\n  * provider\n  * providerId\n  * providerPlaceId\n  * title\n  * position\n  * address\n  * formattedAddress\n  * placeType\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaceBase"
              },
              {
                "type": "object",
                "required": [
                  "providerId",
                  "providerPlaceId",
                  "title",
                  "position",
                  "address",
                  "formattedAddress",
                  "placeType"
                ]
              }
            ]
          },
          "searchHistoryEntryId": {
            "type": "string",
            "description": "The generated ID for a history entry; an UUID. Only present in search history results."
          },
          "distance": {
            "type": "number",
            "description": "Distance between origin position and the place in [m]. It is only available for PLACE and SEARCH_HISTORY_PLACE type.",
            "format": "double"
          }
        },
        "required": [
          "itemType"
        ]
      },
      "SearchTermSuggestion": {
        "type": "object",
        "description": "Search term suggestion which will lead to a search text search.",
        "properties": {
          "searchTerm": {
            "type": "string",
            "description": "Localized search term which can be displayed as title and used in the search as query parameter."
          },
          "searchLocation": {
            "$ref": "#/components/schemas/SuggestedSearchLocation"
          }
        },
        "required": [
          "searchTerm"
        ]
      },
      "CategorySuggestion": {
        "type": "object",
        "description": "Category suggestion which will lead to a category search.\n\nEither providerOntologyId or categories property must be available. If both are available categories shall be used for the following search request.\nproviderOntologyId shall be used in combination with a title as a query for the following search. This will enable search in premium content.\n\nFor complex queries containing another location, e.g. 'restaurant hamburg' new searchLocation will be provided\nwhich can be used for the following search request and in combination with searchLocation.relationship and the title to construct a formatted title, e.g. \"Restaurants near Hamburg\".\n",
        "properties": {
          "title": {
            "type": "string",
            "description": "Localized category suggestion title.",
            "example": "Restaurants near Hamburg"
          },
          "categoryName": {
            "type": "string",
            "description": "Localized category suggestion.",
            "example": "Restaurants"
          },
          "providerOntologyId": {
            "type": "string",
            "description": "Some providers (e.g. HERE) group POIs dynamically to ontologies.\nThis ID can be passed to the search request as a category with the type PROVIDER_ONTOLOGY.\nThis ID should be only used if categories are not available.\nThis ID is provider-specific, dynamic and shall not be used as reference for icons or even stored on the client side.\n"
          },
          "categories": {
            "type": "array",
            "description": "Category suggestion could be mapped to several categories which are sorted by relevance starting with the most relevant parent category.\nClients could e.g. use the first category to display the icon but use the complete list for search request.\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PoiCategory"
                },
                {
                  "type": "object",
                  "required": [
                    "losCategory",
                    "mguVehicleCategoryId"
                  ]
                }
              ]
            }
          },
          "searchLocation": {
            "$ref": "#/components/schemas/SuggestedSearchLocation"
          },
          "staticIconDiscriminator": {
            "$ref": "#/components/schemas/StaticIconDiscriminator"
          }
        },
        "required": [
          "title"
        ]
      },
      "SortingOption": {
        "type": "string",
        "description": "Sorting options.\n  * `RELEVANCE` - POIs are sorted by relevance. It means that premium POIs are sorted by distance and\n                  Online Pois are not sorted but appear in the order provided by the search provider.\n                  Premium POIs and online POIs are merged into one result list without duplicates.\n  * `DISTANCE` - All POIs in the result are sorted by distance, ascending.\n  * `NAME` - POIs are sorted by name, case-independent.\n  * `PRICE` - Parking POIs are sorted ascending by 2h parking price. POIs with same parking prices are sorted by distance.\n              Refueling POIs are sorted ascending by fuel price. POIs with same fuel prices are sorted by distance.\n              POIs without prices are added at the bottom and sorted by distance.\n              If the relevant number of POIs isn't reached in the response, the sorting option is ignored and the POIs will be sorted by relevance.\n  * `RANGE` - Used for eRoute CSP use-case and will sort the results along the route from the remaining range to the origin.\n",
        "enum": [
          "RELEVANCE",
          "DISTANCE",
          "NAME",
          "PRICE",
          "RANGE"
        ],
        "default": "RELEVANCE"
      },
      "AutoSuggestionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiSuccessfulResponse"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Search Result Items.",
                "items": {
                  "$ref": "#/components/schemas/AutoSuggestionResultItem"
                }
              },
              "derivedSearchLocation": {
                "$ref": "#/components/schemas/DerivedSearchLocation"
              }
            },
            "required": [
              "items"
            ]
          }
        ]
      },
      "SearchResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiSuccessfulResponse"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Search Result Items.",
                "items": {
                  "$ref": "#/components/schemas/SearchResultItem"
                }
              },
              "sortingOptions": {
                "type": "array",
                "description": "List of the sorting options for the response results.",
                "items": {
                  "$ref": "#/components/schemas/SortingOption"
                }
              },
              "poiFilters": {
                "type": "array",
                "description": "List of possible filters that could be applied onto the response.\nThe POI Filters have a market specific functionally defined sort order. The order is adhered to by the array order in this property.",
                "items": {
                  "$ref": "#/components/schemas/POIFilter"
                }
              },
              "derivedSearchLocation": {
                "$ref": "#/components/schemas/DerivedSearchLocation"
              },
              "enhancedSearchRequest": {
                "$ref": "#/components/schemas/EnhancedSearchRequest"
              }
            },
            "required": [
              "items"
            ]
          }
        ]
      },
      "DerivedSearchLocation": {
        "type": "object",
        "description": "This location is specifically tailored to the case where LOS has determined a \"new\" / \"derived\" searchLocation based on the original query.\nCurrently this is only the case for searchLocationType ADDRESS, but in the future this could be extended for other use cases.\n",
        "properties": {
          "searchLocation": {
            "type": "string",
            "description": "Search location describing the derived area of search based on the original input. Value format of the parameter can be 1-n length list of pairs of latitude, longitude in WGS-84 format for geometric locations. Each pair is separated by \"|\", e.g. \"48.1448353,11.5580067|49.1448353,12.5580067\".\n",
            "example": "48.1448353,11.5580067"
          },
          "reason": {
            "type": "string",
            "description": "The reason why LOS has determined a \"new\" / \"derived\" searchLocation.\n\n* `ADDRESS_INPUT_RESOLVED_TO_POINT` - The searchLocation has been resolved to this point. The field derivedSearchLocation.searchLocation will only contain a single pair of latitude and longitude.\n",
            "enum": [
              "ADDRESS_INPUT_RESOLVED_TO_POINT"
            ]
          }
        }
      },
      "EnhancedSearchRequest": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/PlacesRequest"
          },
          "headerOverwrite": {
            "description": "The headers that were overwritten while enhancing the search request.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "Accept-Language": "en-GB",
              "BMW-Home-Market": "DE",
              "BMW-Feature-Toggle": "CDLOS-12345,PARKING_ALL"
            }
          },
          "appliedEnhancement": {
            "type": "string",
            "description": "The applied enhancement or change that was performed to this search request in comparison to the original request made by the client.\n\n* `SEARCH_LOCATION_CHANGED_TO_ORIGIN` - The route search has not provided any results, therefor LOS fallback to a point search around the origin.\n",
            "enum": [
              "SEARCH_LOCATION_CHANGED_TO_ORIGIN"
            ]
          }
        }
      },
      "POIFilterRequestValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The filter enum name that is represented by this filter."
          },
          "values": {
            "type": "array",
            "description": "The values represented by that filter object that is requested for consideration in search. This property must not be provided if the filter is of type SIMPLE.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ],
        "example": {
          "name": "plug_type",
          "values": [
            "TYP1",
            "TYP2"
          ]
        }
      },
      "POIFilter": {
        "type": "object",
        "properties": {
          "losCatRef": {
            "type": "string",
            "description": "If this value is non-empty this filter is only applicable for the specified losCategoryId that is given in this property. If not set this filter is a category independent filter."
          },
          "name": {
            "type": "string",
            "description": "The filter enum name that is represented by this filter."
          },
          "values": {
            "type": "array",
            "description": "The values represented by that filter object. This property is not provided in case of type=SIMPLE. The values represent the filters that can be applied onto the response.",
            "items": {
              "type": "string"
            }
          },
          "displayName": {
            "type": "string",
            "description": "The value contains an optional dynamic translation as a display value for the filter name in case of a need for dynamic translation, it is only used for `DYNAMIC_MULTI_SELECT` filter type. If this values is provided by the back-end, this translation for the filter name should take priority over the one provided from /translations endpoint.",
            "example": "Charging Operators"
          },
          "ttsName": {
            "type": "string",
            "description": "The value contains an optional dynamic text to speech value as a read out value for the filter name in case of a need for dynamic translation, it is only used for `DYNAMIC_MULTI_SELECT` filter type. If this values is provided by the back-end, this translation for the filter name should take priority over the one provided from /translations endpoint.",
            "example": "Charging Operators"
          },
          "displayTexts": {
            "type": "object",
            "description": "The map contains a display text strings for each value for the `DYNAMIC_MULTI_SELECT` filter, the map is a string to string dictionary where the key matches the values of the `DYNAMIC_MULTI_SELECT` filter.",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "HERE:265": "BMW",
              "CHA:ENBW": "ENBW"
            }
          },
          "ttsTranslations": {
            "type": "object",
            "description": "The map contains a text to speech (tts) strings for each value for the `DYNAMIC_MULTI_SELECT` filter, the map is a string to string dictionary where the key matches the values of the `DYNAMIC_MULTI_SELECT` filter.\nThe tts translations are basically the same as the translations, but in a machine-readable form;\nfor example, '≥' is replaced by 'greater than or equal to'.\n\nThe tts translations should be preferred over the translations in all cases where speech output is required.\n",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "HERE:1559": "&lt;tts lang=&quot;eng&quot;/&gt;kfc&lt;tts lang=&quot;unknown&quot;/&gt;<"
            }
          },
          "type": {
            "$ref": "#/components/schemas/POIFilterType"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "example": {
          "losCatRef": "charging_stations",
          "name": "plug_type",
          "values": [
            "TYP1",
            "TYP2"
          ]
        }
      },
      "POIFilterType": {
        "type": "string",
        "description": "Filters can be of multiple types:\n\n* `SIMPLE` - A named filter that can apply or not, only has a boolean value.\n* `MULTI_SELECT` - A filter that has multiple values and where more than one value can be selected at the same time. Multiple values within that filter are applied with OR criteria.\n* `USER_SELECTED` - A filter that needs to fill the values from the client side. It will be used by the user preferred operator filter.\n* `DYNAMIC_MULTI_SELECT` - See `MULTI_SELECT` filter for application semantics of this filter. In contrast to the `MULTI_SELECT` filter the values of this filter are only created at runtime and are thus dynamic. Therefore translations will not be available via /translations endpoint but will be directly contained in the filter object for this filter type.\n\nFilter application rules are as follows\n* All filters will be treated as AND conjunction. E.g.: SIMPLE_FILTER_1 AND SIMPLE_FILTER_2 AND SIMPLE_FILTER_N\n* Multiple values of a MULTI_SELECT filter can be seen as OR. E.g.: (MULTI_FILTER_1_VALUE_A OR MULTI_FILTER_1_VALUE_B) AND SIMPLE_FILTER_1\n",
        "enum": [
          "SIMPLE",
          "MULTI_SELECT",
          "USER_SELECTED",
          "DYNAMIC_MULTI_SELECT"
        ]
      },
      "PlaceDetailsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiSuccessfulResponse"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Result items in the order specified in the request.",
                "items": {
                  "type": "object",
                  "properties": {
                    "place": {
                      "$ref": "#/components/schemas/Place"
                    }
                  }
                }
              }
            },
            "required": [
              "items"
            ]
          }
        ]
      },
      "TencentMppAppReference": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "Id of mini app in tencent mpp program."
          },
          "appLogo": {
            "type": "string",
            "description": "Logo of mini app in tencent mpp program."
          },
          "appName": {
            "type": "string",
            "description": "Name of mini app in tencent mpp program."
          },
          "appVersion": {
            "type": "string",
            "description": "Version of mini app in tencent mpp program."
          },
          "cpPoiId": {
            "type": "string",
            "description": "POI Id at mini app in tencent mpp program."
          },
          "pagesPath": {
            "type": "string",
            "description": "Used for deep linking in mini app."
          },
          "path": {
            "type": "string",
            "description": "Used for deep linking in mini app."
          }
        }
      },
      "ParameterError": {
        "type": "object",
        "description": "param name and error message",
        "properties": {
          "name": {
            "type": "string",
            "description": "param name",
            "example": "\"payload\""
          },
          "message": {
            "type": "string",
            "description": "param error message",
            "example": "\"Ping payload must be 1-20 characters long\""
          }
        },
        "required": [
          "message",
          "name"
        ]
      },
      "ApiSuccessfulResponse": {
        "type": "object",
        "properties": {
          "translationsVersion": {
            "type": "string",
            "description": "Version of the translation file required to translate the response. It is the same version contained in the ETag header of the translations response."
          },
          "filtersVersion": {
            "type": "string",
            "description": "Version of the filter file. It is the same version contained in the ETag header of the poiFilters response."
          }
        },
        "required": [
          "translationsVersion",
          "filtersVersion"
        ]
      },
      "ApiClientErrorResponse": {
        "type": "object",
        "description": "Object holding information about client errors (HTTP code 400).",
        "properties": {
          "logTransactionId": {
            "type": "string",
            "description": "transaction id from the log",
            "example": "\"1481367847;0\""
          },
          "requestUrl": {
            "type": "string",
            "description": "url of the request",
            "example": "\"https://mrp-test-emea.bmwgroup.net/mrp/status/v1/health\""
          },
          "parameterErrors": {
            "type": "array",
            "description": "list of erroneous params",
            "items": {
              "$ref": "#/components/schemas/ParameterError"
            }
          }
        },
        "required": [
          "logTransactionId",
          "parameterErrors",
          "requestUrl"
        ]
      },
      "ApiAuthorizationErrorResponse": {
        "type": "object",
        "description": "Object holding information about authorization errors (HTTP code 401 and 403).",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message."
          }
        },
        "required": [
          "message"
        ]
      },
      "ApiServerErrorResponse": {
        "type": "object",
        "description": "Object holding information about internal server errors (HTTP code 500).",
        "properties": {
          "logTransactionId": {
            "type": "string",
            "description": "transaction id from the log",
            "example": "\"1481367847;0\""
          },
          "logErrorId": {
            "type": "string",
            "description": "error id from the log",
            "example": "\"MRP1000\""
          },
          "requestTimestamp": {
            "type": "string",
            "description": "UTC Timestamp when the error happened.\nDatatype: Date-Time, see: RFC 5545: https://tools.ietf.org/html/rfc5545#section-3.3.5\n",
            "format": "Date-Time",
            "example": "\"20180605T141500Z\""
          },
          "requestUrl": {
            "type": "string",
            "description": "url of the request",
            "example": "\"https://mrp-test-emea.bmwgroup.net/mrp/status/v1/health\""
          }
        },
        "required": [
          "logErrorId",
          "logTransactionId",
          "requestTimestamp",
          "requestUrl"
        ]
      },
      "TranslationResponse": {
        "type": "object",
        "properties": {
          "translations": {
            "type": "object",
            "description": "Object holding the translation keys, modeled as a Map<string, string>.\n",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "items.place.businessHours": "Opening hours",
              "items.place.charging.access.PRIVATE": "Private",
              "items.place.charging.authentications": "Authentication methods",
              "items.place.charging.authentications.APP": "App",
              "items.place.charging.authentications.CALL": "Call operator",
              "items.place.charging.authentications.KEY": "Key",
              "poiFilters.green_electricity": "Green Electricity",
              "poiFilters.plug_type.TYP1": "AC Type 1",
              "poiFilters.plug_type.TYP2": "AC Type 2",
              "poiFilters.charging_stations.charging_power.200": "≥ 200 kW (HPC)"
            }
          },
          "ttsTranslations": {
            "type": "object",
            "description": "Object containing the translation keys for text to speech (tts), modeled as Map<string, string>.\nThe tts translations are basically the same as the translations, but in a machine-readable form;\nfor example, '≥' is replaced by 'greater than or equal to'.\n\nThe tts translations should be preferred over the translations in all cases where speech output is required.\n",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "poiFilters.charging_stations.charging_power.200": "Greater or equal to 200 kilowatt (High power charging)"
            }
          }
        },
        "required": [
          "translations"
        ]
      },
      "AllFiltersResponse": {
        "type": "object",
        "description": "Object holding all the filters that are available on this API.\n",
        "properties": {
          "poiFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POIFilter"
            }
          }
        },
        "required": [
          "poiFilters"
        ]
      },
      "ChargingCapabilities": {
        "type": "array",
        "description": "Additional charging capabilities supported by the vehicle.\n\n* `DC` - If this value is set in super-categories and query searches also charging stations classified as DC or unclassified charging stations will be returned. To enable CCE/CTE charging capabilities `DC` must be provided.\n* `AC` - If this value is set in super-categories and query searches also charging stations classified as AC or unclassified charging stations will be returned\n* `PNC` - If this value is set plug and charge based filters are enabled\n* `NONE` - If this value is set to NONE in super-categories and query searches no charging stations will be returned\n* `EMPTY` - If this value is empty or not present in the super-categories and queries, all charging stations are returned\n\nFor more info see also [CDLOS / Charging Capabilities](https://atc.bmwgroup.net/confluence/display/CDLOS/Charging+capabilities).\n\nNote: For MGU vehicles, all charging capabilities shall be taken from the provisioning (section: ev_settings -> charging_capabilities).\n",
        "items": {
          "type": "string",
          "enum": [
            "DC",
            "AC",
            "PNC",
            "NONE"
          ]
        }
      },
      "CountryCodes": {
        "type": "string",
        "enum": [
          "AE",
          "AT",
          "AU",
          "BE",
          "BG",
          "BR",
          "CA",
          "CH",
          "CN",
          "CY",
          "CZ",
          "DE",
          "DK",
          "EE",
          "ES",
          "FI",
          "FR",
          "GB",
          "GR",
          "HK",
          "HR",
          "HU",
          "ID",
          "IE",
          "IL",
          "IN",
          "IT",
          "JP",
          "KR",
          "KW",
          "LI",
          "LT",
          "LV",
          "LU",
          "MO",
          "MT",
          "MX",
          "MY",
          "NL",
          "NZ",
          "PL",
          "PT",
          "RO",
          "RU",
          "SE",
          "SG",
          "SI",
          "SK",
          "SM",
          "TH",
          "TR",
          "TW",
          "US",
          "VN",
          "ZA"
        ]
      },
      "ContinentalCodes": {
        "type": "string",
        "enum": [
          "AF",
          "NM",
          "OC",
          "AS",
          "EU",
          "SA"
        ]
      },
      "AdditionalCountryCodes": {
        "type": "string",
        "enum": [
          "AUTOMATIC_NDS_COVERAGE"
        ]
      },
      "CountryFilter": {
        "description": "A list of Alpha-2 ISO country codes (ISO 3166-1) to limit the search to.\nThis will not override the search location. The API allows for country codes, special shortcuts for regions or AUTOMATIC_NDS_COVERAGE (see below).\n\n* `AF` - Shortcut for Africa\n* `NM` - Shortcut for North America\n* `OC` - Shortcut for Oceania\n* `AS` - Shortcut for Asia (with out China, Hong Kong, Macao and Korea)\n* `EU` - Shortcut for Europe\n* `SA` - Shortcut for South America\n* `AUTOMATIC_NDS_COVERAGE` - A predefined countryFilter based on the BMW-Home-Market header\n",
        "type": "array",
        "example": [
          "DE",
          "AF",
          "NO"
        ],
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ContinentalCodes"
            },
            {
              "$ref": "#/components/schemas/CountryCodes"
            },
            {
              "$ref": "#/components/schemas/AdditionalCountryCodes"
            }
          ]
        }
      },
      "StaticIconDiscriminator": {
        "type": "object",
        "description": "This section is used to determine the proper POI icon.\n",
        "properties": {
          "powerClass": {
            "description": "An icon trait to mark this POIs charging capability.\n",
            "type": "string",
            "enum": [
              "AC",
              "DC",
              "HPC"
            ]
          },
          "parkingPreferredPartner": {
            "description": "An icon trait to mark this POI as preferred for Parking.\n",
            "type": "boolean",
            "default": false
          },
          "refuelingPreferredPartner": {
            "description": "An icon trait to mark this POI as preferred for Refueling.\n",
            "type": "boolean",
            "default": false
          },
          "chargingPreferredPartner": {
            "description": "An icon trait to mark this POI as preferred for Charging.\n",
            "type": "boolean",
            "default": false
          },
          "onlinePayment": {
            "description": "An icon trait to mark this POI for Online Payment.\n",
            "type": "boolean",
            "default": false
          },
          "customIcon": {
            "description": "The download path of the icon for this result.",
            "$ref": "#/components/schemas/Icon"
          }
        }
      },
      "NearbyPOI": {
        "type": "object",
        "description": "Reference info to an amenity POI that is nearby to the POI represented by this response object.\n\nA related amenity POI can be either described by a full POI reference in which case all attributes of this object will be provided, or can\nbe just an indication for existence of a nearby POI of some sort in which case only\nthe amenityType field will be populated.\n\nNote: Related amenity POIs are currently available for Charging Stations only for some categories only.\n",
        "properties": {
          "providerId": {
            "type": "integer",
            "description": "The id of the provider of the related POI."
          },
          "providerPlaceId": {
            "type": "string",
            "description": "The unique id specified by the content provider for the amenity POI. Samples for (parking, e.g., Parkopedia, refueling, e.g. navX, charging, e.g. hubject ) are: 384510, 6591bcd4-75f7-102d-8c52-00304891a58c, DESWME008202"
          },
          "title": {
            "type": "string",
            "description": "Localized title for the place, this will be guaranteed to be available for both addresses and POIs.\n"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PoiCategory"
              },
              {
                "type": "object",
                "required": [
                  "losCategory",
                  "mguVehicleCategoryId"
                ]
              }
            ]
          },
          "secondaryCategories": {
            "description": "A list of categories which apply for this nearby POI object.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PoiCategory"
                },
                {
                  "type": "object",
                  "required": [
                    "losCategory",
                    "mguVehicleCategoryId"
                  ]
                }
              ]
            }
          },
          "walkingTime": {
            "type": "number",
            "format": "integer",
            "description": "Walking time calculated from the POI represented by this response object to the amenity POI.   \nThe walking time is given in seconds.\n"
          },
          "walkingDistance": {
            "type": "number",
            "format": "integer",
            "description": "Walking distance calculated between the POI represented by this response object and the amenity POI.   \nThe walking distance is given in meters.\n"
          }
        }
      },
      "SearchHistoryResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Search History Result Items.",
            "items": {
              "$ref": "#/components/schemas/SearchHistoryResultItem"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "SearchHistoryResultItem": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "string",
            "description": "Result item type.\n  * `PLACE` - Entry for a place. It contains place and distance property.\n  * `SEARCH_TERM` - Entry for a search text, which will execute free text search query.\n  * `CATEGORY` - Entry for a category, which will execute a category search.\n",
            "enum": [
              "PLACE",
              "SEARCH_TERM",
              "CATEGORY"
            ]
          },
          "category": {
            "$ref": "#/components/schemas/CategorySuggestion"
          },
          "searchTerm": {
            "$ref": "#/components/schemas/SearchTermSuggestion"
          },
          "place": {
            "description": "Base place data.\n\nFollowing properties will be guaranteed to be available for search history result items:\n  * providerId\n  * providerPlaceId\n  * title\n  * position\n  * address\n  * formattedAddress\n  * placeType\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaceBaseSearchHistoryUpload"
              },
              {
                "type": "object",
                "required": [
                  "providerId",
                  "providerPlaceId",
                  "title",
                  "position",
                  "address",
                  "formattedAddress",
                  "placeType"
                ]
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The generated ID for a history entry; an UUID."
          },
          "lastModificationTime": {
            "type": "string",
            "description": "The last modification time of the entry.",
            "format": "Date-Time",
            "example": "20180605T141500Z"
          }
        },
        "required": [
          "itemType",
          "id",
          "lastModificationTime"
        ]
      },
      "SearchHistoryRequestItem": {
        "description": "Entry that should be added with the `ADD` operation.",
        "type": "object",
        "properties": {
          "itemType": {
            "type": "string",
            "description": "Result item type.\n  * `PLACE` - Entry for a place. It contains place and distance property.\n  * `SEARCH_TERM` - Entry for a search text, which will execute free text search query.\n  * `CATEGORY` - Entry for a category, which will execute a category search.\n",
            "enum": [
              "PLACE",
              "SEARCH_TERM",
              "CATEGORY"
            ]
          },
          "category": {
            "$ref": "#/components/schemas/CategorySuggestion"
          },
          "searchTerm": {
            "$ref": "#/components/schemas/SearchTermSuggestion"
          },
          "place": {
            "description": "Search history place data.\nThe formattedAddress and the staticIconDiscriminator are not persisted but generated when result is requested.\n\nFollowing properties are mandatory for a search history place:\n  * provider\n  * title\n  * position\n  * address\n  * placeType\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaceBase"
              },
              {
                "type": "object",
                "required": [
                  "provider",
                  "title",
                  "position",
                  "address",
                  "placeType"
                ]
              }
            ]
          },
          "analytics": {
            "$ref": "#/components/schemas/AnalyticsData"
          }
        },
        "required": [
          "itemType"
        ]
      },
      "Operation": {
        "type": "object",
        "description": "Operation that should be performed:\n\n* `ADD` - Write the entry from the entry property to the search history. \"entry\" is required.\n* `DELETE` - Delete the entry linked to the id from the id property. \"id\" is required.\n* `DELETE_ALL` - Delete the complete search history for the current use. No further attributes are required.\n",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "ADD",
              "DELETE",
              "DELETE_ALL"
            ]
          },
          "entry": {
            "$ref": "#/components/schemas/SearchHistoryRequestItem"
          },
          "id": {
            "description": "ID that should be deleted with the `DELETE` operation.",
            "type": "string"
          }
        },
        "required": [
          "operation"
        ]
      },
      "AnalyticsData": {
        "properties": {
          "uploadTrigger": {
            "$ref": "#/components/schemas/UploadTrigger"
          },
          "searchTerm": {
            "type": "string",
            "description": "The search term used, if the current history entry is originating from a textual search.\n\nExample:\nThe customer makes a search for query \"restaurants\" and selects a particular restaurant named \"LaRomantica\".\nThe historyEntry.place will reference the restaurant \"LaRomantica\" and the analytics.searchTerm will contain \"restaurants\".\n"
          },
          "positionInResultList": {
            "type": "integer",
            "description": "The position provided by the backend of the selected entry in the result list.",
            "minimum": 1,
            "maximum": 100
          },
          "searchSessionId": {
            "description": "The ID of the search session with which this operation is associated. This only makes sense for operations of type ADD.\nPlease note when using this field:\n * use this field only with transactions in use with requests to LOS-PLC not for searches done with other systems than LOS.\n * the session id provided in this value could be the one providing in the BMW-Search-Session-ID header for this request, but it could also be different in case this add operation adds an entry that was part of a previous search session. \n",
            "type": "string",
            "example": "a365a023-3563-4c22-8f95-1140cf51e4cb"
          },
          "searchTransactionId": {
            "description": "The ID of the transaction that produced the result this operation is associated with. \nPlease note when using this field:\n* use this field only with transactions in use with requests to LOS-PLC.\n* the transaction id provided in this value should not be the one providing in the BMW-CV-Transaction-ID header for this request. Instead in this field here it is supposed to be provided the transaction id value of the previous search request that produced the search result causing the customer to make this add request to search history..\n* this only makes sense for operations of type ADD.\n",
            "type": "string",
            "example": "a365a023-3563-4c22-8f95-1140cf51e4cb"
          }
        },
        "required": [
          "uploadTrigger"
        ],
        "type": "object"
      },
      "UploadTrigger": {
        "type": "string",
        "description": "The event that triggered the upload to search history.\n\n* `EXECUTE_TEXT_SEARCH` - When a search is performed, e.g. when a /places search is triggered. This should usually result in a `SEARCH_TERM` entry.\n* `SELECT_FROM_PLACES_SEARCH` - When a result from /places is selected. This should usually result in a `PLACE` entry.\n* `SELECT_FROM_SUGGESTIONS` - When an entry is selected from the /suggestions result list. This could result in any entry depending, on the history entry type.\n* `SELECT_FROM_HISTORY` - When an search history entry is selected. This could result in any entry depending, on the history entry type.\n",
        "enum": [
          "EXECUTE_TEXT_SEARCH",
          "SELECT_FROM_PLACES_SEARCH",
          "SELECT_FROM_SUGGESTIONS",
          "SELECT_FROM_HISTORY"
        ]
      },
      "LookupProviderPlaceId": {
        "properties": {
          "providerId": {
            "description": "The id of the provider for which the details of a POI shall be fetched.",
            "example": 75,
            "type": "integer"
          },
          "providerPlaceId": {
            "description": "The id of the place for which details shall be retrieved. It is issued by the content provider of the Place.",
            "example": "here:pds:place:276jx7ps-4c2bac56347404b067d48d5b0e493012",
            "type": "string"
          }
        },
        "required": [
          "providerId",
          "providerPlaceId"
        ]
      },
      "LookupEvseId": {
        "properties": {
          "evseId": {
            "description": "The EVSE-ID of a charging place for which details shall be retrieved.",
            "example": "DE*SWM*E015701",
            "type": "string"
          }
        },
        "required": [
          "evseId"
        ]
      },
      "LookupDpNumber": {
        "properties": {
          "providerId": {
            "description": "The id of the provider for which the details of a POI shall be fetched.\nIf the providerId is missing, the BMW-Vehicle-Brand header is used and if bot are missing, an HTTP error 400 will be returned.\n",
            "example": 75,
            "type": "integer"
          },
          "distributionPartnerNumber": {
            "type": "string",
            "description": "The distribution partner number; meaning similar to agDealerCode, but brand-specific (one AG Dealer (agDealerCode)) may consist of several distribution partners),\nunique within a continent, length: 5-char, consisting of digits only.\n",
            "example": 2119
          },
          "outlet": {
            "type": "string",
            "description": "The outlet of a dealer; each dealer may have several physical outlet locations, e. g. '17'"
          }
        },
        "required": [
          "distributionPartnerNumber",
          "outlet"
        ]
      },
      "Reviews": {
        "type": "array",
        "description": "Contains the user's reviews of POI, currently this is only available for certain POIs in China",
        "items": {
          "$ref": "#/components/schemas/Review"
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "authorType": {
            "type": "string",
            "enum": [
              "BMW",
              "USER"
            ]
          },
          "authorName": {
            "type": "string",
            "description": "Author of review.",
            "example": "George Orwell"
          },
          "time": {
            "type": "string",
            "format": "Date-Time",
            "description": "Time this review was received.",
            "example": "20180605T141500"
          },
          "rating": {
            "type": "number",
            "description": "Rating given by author.",
            "example": 4.4
          },
          "text": {
            "type": "string",
            "description": "Review text as provided by online provider.",
            "example": "Super Laden! Sehr bodenständiges und gutes Essen"
          },
          "language": {
            "type": "string",
            "description": "The ISO language code in which the review is written in.",
            "example": "zh-CN"
          },
          "profilePicture": {
            "$ref": "#/components/schemas/DetailsImage"
          },
          "tags": {
            "type": "array",
            "description": "Some brief description of the POI.",
            "example": [
              "Less waiting",
              "Easy to charge",
              "Nice environment",
              "Parking fee discount"
            ],
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "imageUrls": {
            "type": "array",
            "description": "Images for this review.",
            "items": {
              "$ref": "#/components/schemas/DetailsImage"
            }
          },
          "aspectReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AspectReview"
            }
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "displayText": {
            "type": "string",
            "example": "Less waiting"
          }
        }
      },
      "AspectReview": {
        "type": "object",
        "description": "A particular part or feature of the POIs' review.",
        "properties": {
          "aspect": {
            "type": "string",
            "example": "accessibility"
          },
          "rating": {
            "type": "number",
            "example": 4.5
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "losCategory": {
            "type": "string",
            "description": "The LOS category that theses brands belong to.",
            "example": "charging_stations"
          },
          "mguVehicleCategoryId": {
            "type": "integer",
            "description": "5-digit category id used within MGU vehicles (fixed mapping table).",
            "format": "int32",
            "example": 13000
          },
          "mainCategory": {
            "description": "A main category is a category that could be called from all markets.",
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "losCategory",
          "mainCategory"
        ]
      }
    }
  }
}